// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: logical_camera_image.proto

package cn.autolabor.plugin.gazebo.msgs;

public final class ProtoLogicalCameraImage {
  private ProtoLogicalCameraImage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface LogicalCameraImageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:gazebo.msgs.LogicalCameraImage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .gazebo.msgs.Pose pose = 1;</code>
     *
     * <pre>
     *&#47; &#92;brief Pose of the logical camera.
     * </pre>
     */
    boolean hasPose();
    /**
     * <code>required .gazebo.msgs.Pose pose = 1;</code>
     *
     * <pre>
     *&#47; &#92;brief Pose of the logical camera.
     * </pre>
     */
    cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose getPose();
    /**
     * <code>required .gazebo.msgs.Pose pose = 1;</code>
     *
     * <pre>
     *&#47; &#92;brief Pose of the logical camera.
     * </pre>
     */
    cn.autolabor.plugin.gazebo.msgs.ProtoPose.PoseOrBuilder getPoseOrBuilder();

    /**
     * <code>repeated .gazebo.msgs.LogicalCameraImage.Model model = 2;</code>
     *
     * <pre>
     *&#47; &#92;brief All the models seen by the LogicalCamera
     * </pre>
     */
    java.util.List<cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model> 
        getModelList();
    /**
     * <code>repeated .gazebo.msgs.LogicalCameraImage.Model model = 2;</code>
     *
     * <pre>
     *&#47; &#92;brief All the models seen by the LogicalCamera
     * </pre>
     */
    cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model getModel(int index);
    /**
     * <code>repeated .gazebo.msgs.LogicalCameraImage.Model model = 2;</code>
     *
     * <pre>
     *&#47; &#92;brief All the models seen by the LogicalCamera
     * </pre>
     */
    int getModelCount();
    /**
     * <code>repeated .gazebo.msgs.LogicalCameraImage.Model model = 2;</code>
     *
     * <pre>
     *&#47; &#92;brief All the models seen by the LogicalCamera
     * </pre>
     */
    java.util.List<? extends cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.ModelOrBuilder> 
        getModelOrBuilderList();
    /**
     * <code>repeated .gazebo.msgs.LogicalCameraImage.Model model = 2;</code>
     *
     * <pre>
     *&#47; &#92;brief All the models seen by the LogicalCamera
     * </pre>
     */
    cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.ModelOrBuilder getModelOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code gazebo.msgs.LogicalCameraImage}
   */
  public static final class LogicalCameraImage extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:gazebo.msgs.LogicalCameraImage)
      LogicalCameraImageOrBuilder {
    // Use LogicalCameraImage.newBuilder() to construct.
    private LogicalCameraImage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LogicalCameraImage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LogicalCameraImage defaultInstance;
    public static LogicalCameraImage getDefaultInstance() {
      return defaultInstance;
    }

    public LogicalCameraImage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LogicalCameraImage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = pose_.toBuilder();
              }
              pose_ = input.readMessage(cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pose_);
                pose_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                model_ = new java.util.ArrayList<cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model>();
                mutable_bitField0_ |= 0x00000002;
              }
              model_.add(input.readMessage(cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          model_ = java.util.Collections.unmodifiableList(model_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.internal_static_gazebo_msgs_LogicalCameraImage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.internal_static_gazebo_msgs_LogicalCameraImage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.class, cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Builder.class);
    }

    public static com.google.protobuf.Parser<LogicalCameraImage> PARSER =
        new com.google.protobuf.AbstractParser<LogicalCameraImage>() {
      public LogicalCameraImage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LogicalCameraImage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LogicalCameraImage> getParserForType() {
      return PARSER;
    }

    public interface ModelOrBuilder extends
        // @@protoc_insertion_point(interface_extends:gazebo.msgs.LogicalCameraImage.Model)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *&#47; &#92;brief Name of the detected model
       * </pre>
       */
      boolean hasName();
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *&#47; &#92;brief Name of the detected model
       * </pre>
       */
      java.lang.String getName();
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *&#47; &#92;brief Name of the detected model
       * </pre>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <code>required .gazebo.msgs.Pose pose = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief Pose of the detected model. The pose is relative to the
       * / logical camera's pose.
       * </pre>
       */
      boolean hasPose();
      /**
       * <code>required .gazebo.msgs.Pose pose = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief Pose of the detected model. The pose is relative to the
       * / logical camera's pose.
       * </pre>
       */
      cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose getPose();
      /**
       * <code>required .gazebo.msgs.Pose pose = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief Pose of the detected model. The pose is relative to the
       * / logical camera's pose.
       * </pre>
       */
      cn.autolabor.plugin.gazebo.msgs.ProtoPose.PoseOrBuilder getPoseOrBuilder();
    }
    /**
     * Protobuf type {@code gazebo.msgs.LogicalCameraImage.Model}
     *
     * <pre>
     *&#47; &#92;brief Information about a model that is reported by a
     * / LogicalCameraSensor
     * </pre>
     */
    public static final class Model extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:gazebo.msgs.LogicalCameraImage.Model)
        ModelOrBuilder {
      // Use Model.newBuilder() to construct.
      private Model(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Model(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Model defaultInstance;
      public static Model getDefaultInstance() {
        return defaultInstance;
      }

      public Model getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Model(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                name_ = bs;
                break;
              }
              case 18: {
                cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = pose_.toBuilder();
                }
                pose_ = input.readMessage(cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(pose_);
                  pose_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.internal_static_gazebo_msgs_LogicalCameraImage_Model_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.internal_static_gazebo_msgs_LogicalCameraImage_Model_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model.class, cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model.Builder.class);
      }

      public static com.google.protobuf.Parser<Model> PARSER =
          new com.google.protobuf.AbstractParser<Model>() {
        public Model parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Model(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Model> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private java.lang.Object name_;
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *&#47; &#92;brief Name of the detected model
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *&#47; &#92;brief Name of the detected model
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *&#47; &#92;brief Name of the detected model
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int POSE_FIELD_NUMBER = 2;
      private cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose pose_;
      /**
       * <code>required .gazebo.msgs.Pose pose = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief Pose of the detected model. The pose is relative to the
       * / logical camera's pose.
       * </pre>
       */
      public boolean hasPose() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .gazebo.msgs.Pose pose = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief Pose of the detected model. The pose is relative to the
       * / logical camera's pose.
       * </pre>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose getPose() {
        return pose_;
      }
      /**
       * <code>required .gazebo.msgs.Pose pose = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief Pose of the detected model. The pose is relative to the
       * / logical camera's pose.
       * </pre>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoPose.PoseOrBuilder getPoseOrBuilder() {
        return pose_;
      }

      private void initFields() {
        name_ = "";
        pose_ = cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasPose()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getPose().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, pose_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, pose_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code gazebo.msgs.LogicalCameraImage.Model}
       *
       * <pre>
       *&#47; &#92;brief Information about a model that is reported by a
       * / LogicalCameraSensor
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:gazebo.msgs.LogicalCameraImage.Model)
          cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.ModelOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.internal_static_gazebo_msgs_LogicalCameraImage_Model_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.internal_static_gazebo_msgs_LogicalCameraImage_Model_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model.class, cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model.Builder.class);
        }

        // Construct using cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getPoseFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          if (poseBuilder_ == null) {
            pose_ = cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose.getDefaultInstance();
          } else {
            poseBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.internal_static_gazebo_msgs_LogicalCameraImage_Model_descriptor;
        }

        public cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model getDefaultInstanceForType() {
          return cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model.getDefaultInstance();
        }

        public cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model build() {
          cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model buildPartial() {
          cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model result = new cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (poseBuilder_ == null) {
            result.pose_ = pose_;
          } else {
            result.pose_ = poseBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model) {
            return mergeFrom((cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model other) {
          if (other == cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (other.hasPose()) {
            mergePose(other.getPose());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasName()) {
            
            return false;
          }
          if (!hasPose()) {
            
            return false;
          }
          if (!getPose().isInitialized()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object name_ = "";
        /**
         * <code>required string name = 1;</code>
         *
         * <pre>
         *&#47; &#92;brief Name of the detected model
         * </pre>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string name = 1;</code>
         *
         * <pre>
         *&#47; &#92;brief Name of the detected model
         * </pre>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string name = 1;</code>
         *
         * <pre>
         *&#47; &#92;brief Name of the detected model
         * </pre>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string name = 1;</code>
         *
         * <pre>
         *&#47; &#92;brief Name of the detected model
         * </pre>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1;</code>
         *
         * <pre>
         *&#47; &#92;brief Name of the detected model
         * </pre>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1;</code>
         *
         * <pre>
         *&#47; &#92;brief Name of the detected model
         * </pre>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        private cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose pose_ = cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose, cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoPose.PoseOrBuilder> poseBuilder_;
        /**
         * <code>required .gazebo.msgs.Pose pose = 2;</code>
         *
         * <pre>
         *&#47; &#92;brief Pose of the detected model. The pose is relative to the
         * / logical camera's pose.
         * </pre>
         */
        public boolean hasPose() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required .gazebo.msgs.Pose pose = 2;</code>
         *
         * <pre>
         *&#47; &#92;brief Pose of the detected model. The pose is relative to the
         * / logical camera's pose.
         * </pre>
         */
        public cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose getPose() {
          if (poseBuilder_ == null) {
            return pose_;
          } else {
            return poseBuilder_.getMessage();
          }
        }
        /**
         * <code>required .gazebo.msgs.Pose pose = 2;</code>
         *
         * <pre>
         *&#47; &#92;brief Pose of the detected model. The pose is relative to the
         * / logical camera's pose.
         * </pre>
         */
        public Builder setPose(cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose value) {
          if (poseBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            pose_ = value;
            onChanged();
          } else {
            poseBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .gazebo.msgs.Pose pose = 2;</code>
         *
         * <pre>
         *&#47; &#92;brief Pose of the detected model. The pose is relative to the
         * / logical camera's pose.
         * </pre>
         */
        public Builder setPose(
            cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose.Builder builderForValue) {
          if (poseBuilder_ == null) {
            pose_ = builderForValue.build();
            onChanged();
          } else {
            poseBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .gazebo.msgs.Pose pose = 2;</code>
         *
         * <pre>
         *&#47; &#92;brief Pose of the detected model. The pose is relative to the
         * / logical camera's pose.
         * </pre>
         */
        public Builder mergePose(cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose value) {
          if (poseBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                pose_ != cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose.getDefaultInstance()) {
              pose_ =
                cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose.newBuilder(pose_).mergeFrom(value).buildPartial();
            } else {
              pose_ = value;
            }
            onChanged();
          } else {
            poseBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .gazebo.msgs.Pose pose = 2;</code>
         *
         * <pre>
         *&#47; &#92;brief Pose of the detected model. The pose is relative to the
         * / logical camera's pose.
         * </pre>
         */
        public Builder clearPose() {
          if (poseBuilder_ == null) {
            pose_ = cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose.getDefaultInstance();
            onChanged();
          } else {
            poseBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>required .gazebo.msgs.Pose pose = 2;</code>
         *
         * <pre>
         *&#47; &#92;brief Pose of the detected model. The pose is relative to the
         * / logical camera's pose.
         * </pre>
         */
        public cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose.Builder getPoseBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getPoseFieldBuilder().getBuilder();
        }
        /**
         * <code>required .gazebo.msgs.Pose pose = 2;</code>
         *
         * <pre>
         *&#47; &#92;brief Pose of the detected model. The pose is relative to the
         * / logical camera's pose.
         * </pre>
         */
        public cn.autolabor.plugin.gazebo.msgs.ProtoPose.PoseOrBuilder getPoseOrBuilder() {
          if (poseBuilder_ != null) {
            return poseBuilder_.getMessageOrBuilder();
          } else {
            return pose_;
          }
        }
        /**
         * <code>required .gazebo.msgs.Pose pose = 2;</code>
         *
         * <pre>
         *&#47; &#92;brief Pose of the detected model. The pose is relative to the
         * / logical camera's pose.
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose, cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoPose.PoseOrBuilder> 
            getPoseFieldBuilder() {
          if (poseBuilder_ == null) {
            poseBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose, cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoPose.PoseOrBuilder>(
                    getPose(),
                    getParentForChildren(),
                    isClean());
            pose_ = null;
          }
          return poseBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:gazebo.msgs.LogicalCameraImage.Model)
      }

      static {
        defaultInstance = new Model(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:gazebo.msgs.LogicalCameraImage.Model)
    }

    private int bitField0_;
    public static final int POSE_FIELD_NUMBER = 1;
    private cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose pose_;
    /**
     * <code>required .gazebo.msgs.Pose pose = 1;</code>
     *
     * <pre>
     *&#47; &#92;brief Pose of the logical camera.
     * </pre>
     */
    public boolean hasPose() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .gazebo.msgs.Pose pose = 1;</code>
     *
     * <pre>
     *&#47; &#92;brief Pose of the logical camera.
     * </pre>
     */
    public cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose getPose() {
      return pose_;
    }
    /**
     * <code>required .gazebo.msgs.Pose pose = 1;</code>
     *
     * <pre>
     *&#47; &#92;brief Pose of the logical camera.
     * </pre>
     */
    public cn.autolabor.plugin.gazebo.msgs.ProtoPose.PoseOrBuilder getPoseOrBuilder() {
      return pose_;
    }

    public static final int MODEL_FIELD_NUMBER = 2;
    private java.util.List<cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model> model_;
    /**
     * <code>repeated .gazebo.msgs.LogicalCameraImage.Model model = 2;</code>
     *
     * <pre>
     *&#47; &#92;brief All the models seen by the LogicalCamera
     * </pre>
     */
    public java.util.List<cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model> getModelList() {
      return model_;
    }
    /**
     * <code>repeated .gazebo.msgs.LogicalCameraImage.Model model = 2;</code>
     *
     * <pre>
     *&#47; &#92;brief All the models seen by the LogicalCamera
     * </pre>
     */
    public java.util.List<? extends cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.ModelOrBuilder> 
        getModelOrBuilderList() {
      return model_;
    }
    /**
     * <code>repeated .gazebo.msgs.LogicalCameraImage.Model model = 2;</code>
     *
     * <pre>
     *&#47; &#92;brief All the models seen by the LogicalCamera
     * </pre>
     */
    public int getModelCount() {
      return model_.size();
    }
    /**
     * <code>repeated .gazebo.msgs.LogicalCameraImage.Model model = 2;</code>
     *
     * <pre>
     *&#47; &#92;brief All the models seen by the LogicalCamera
     * </pre>
     */
    public cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model getModel(int index) {
      return model_.get(index);
    }
    /**
     * <code>repeated .gazebo.msgs.LogicalCameraImage.Model model = 2;</code>
     *
     * <pre>
     *&#47; &#92;brief All the models seen by the LogicalCamera
     * </pre>
     */
    public cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.ModelOrBuilder getModelOrBuilder(
        int index) {
      return model_.get(index);
    }

    private void initFields() {
      pose_ = cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose.getDefaultInstance();
      model_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPose()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getPose().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getModelCount(); i++) {
        if (!getModel(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, pose_);
      }
      for (int i = 0; i < model_.size(); i++) {
        output.writeMessage(2, model_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, pose_);
      }
      for (int i = 0; i < model_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, model_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gazebo.msgs.LogicalCameraImage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:gazebo.msgs.LogicalCameraImage)
        cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.internal_static_gazebo_msgs_LogicalCameraImage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.internal_static_gazebo_msgs_LogicalCameraImage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.class, cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Builder.class);
      }

      // Construct using cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPoseFieldBuilder();
          getModelFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (poseBuilder_ == null) {
          pose_ = cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose.getDefaultInstance();
        } else {
          poseBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (modelBuilder_ == null) {
          model_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          modelBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.internal_static_gazebo_msgs_LogicalCameraImage_descriptor;
      }

      public cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage getDefaultInstanceForType() {
        return cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.getDefaultInstance();
      }

      public cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage build() {
        cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage buildPartial() {
        cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage result = new cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (poseBuilder_ == null) {
          result.pose_ = pose_;
        } else {
          result.pose_ = poseBuilder_.build();
        }
        if (modelBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            model_ = java.util.Collections.unmodifiableList(model_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.model_ = model_;
        } else {
          result.model_ = modelBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage) {
          return mergeFrom((cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage other) {
        if (other == cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.getDefaultInstance()) return this;
        if (other.hasPose()) {
          mergePose(other.getPose());
        }
        if (modelBuilder_ == null) {
          if (!other.model_.isEmpty()) {
            if (model_.isEmpty()) {
              model_ = other.model_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureModelIsMutable();
              model_.addAll(other.model_);
            }
            onChanged();
          }
        } else {
          if (!other.model_.isEmpty()) {
            if (modelBuilder_.isEmpty()) {
              modelBuilder_.dispose();
              modelBuilder_ = null;
              model_ = other.model_;
              bitField0_ = (bitField0_ & ~0x00000002);
              modelBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getModelFieldBuilder() : null;
            } else {
              modelBuilder_.addAllMessages(other.model_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPose()) {
          
          return false;
        }
        if (!getPose().isInitialized()) {
          
          return false;
        }
        for (int i = 0; i < getModelCount(); i++) {
          if (!getModel(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose pose_ = cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose, cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoPose.PoseOrBuilder> poseBuilder_;
      /**
       * <code>required .gazebo.msgs.Pose pose = 1;</code>
       *
       * <pre>
       *&#47; &#92;brief Pose of the logical camera.
       * </pre>
       */
      public boolean hasPose() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .gazebo.msgs.Pose pose = 1;</code>
       *
       * <pre>
       *&#47; &#92;brief Pose of the logical camera.
       * </pre>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose getPose() {
        if (poseBuilder_ == null) {
          return pose_;
        } else {
          return poseBuilder_.getMessage();
        }
      }
      /**
       * <code>required .gazebo.msgs.Pose pose = 1;</code>
       *
       * <pre>
       *&#47; &#92;brief Pose of the logical camera.
       * </pre>
       */
      public Builder setPose(cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose value) {
        if (poseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pose_ = value;
          onChanged();
        } else {
          poseBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .gazebo.msgs.Pose pose = 1;</code>
       *
       * <pre>
       *&#47; &#92;brief Pose of the logical camera.
       * </pre>
       */
      public Builder setPose(
          cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose.Builder builderForValue) {
        if (poseBuilder_ == null) {
          pose_ = builderForValue.build();
          onChanged();
        } else {
          poseBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .gazebo.msgs.Pose pose = 1;</code>
       *
       * <pre>
       *&#47; &#92;brief Pose of the logical camera.
       * </pre>
       */
      public Builder mergePose(cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose value) {
        if (poseBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              pose_ != cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose.getDefaultInstance()) {
            pose_ =
              cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose.newBuilder(pose_).mergeFrom(value).buildPartial();
          } else {
            pose_ = value;
          }
          onChanged();
        } else {
          poseBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .gazebo.msgs.Pose pose = 1;</code>
       *
       * <pre>
       *&#47; &#92;brief Pose of the logical camera.
       * </pre>
       */
      public Builder clearPose() {
        if (poseBuilder_ == null) {
          pose_ = cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose.getDefaultInstance();
          onChanged();
        } else {
          poseBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .gazebo.msgs.Pose pose = 1;</code>
       *
       * <pre>
       *&#47; &#92;brief Pose of the logical camera.
       * </pre>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose.Builder getPoseBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPoseFieldBuilder().getBuilder();
      }
      /**
       * <code>required .gazebo.msgs.Pose pose = 1;</code>
       *
       * <pre>
       *&#47; &#92;brief Pose of the logical camera.
       * </pre>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoPose.PoseOrBuilder getPoseOrBuilder() {
        if (poseBuilder_ != null) {
          return poseBuilder_.getMessageOrBuilder();
        } else {
          return pose_;
        }
      }
      /**
       * <code>required .gazebo.msgs.Pose pose = 1;</code>
       *
       * <pre>
       *&#47; &#92;brief Pose of the logical camera.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose, cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoPose.PoseOrBuilder> 
          getPoseFieldBuilder() {
        if (poseBuilder_ == null) {
          poseBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose, cn.autolabor.plugin.gazebo.msgs.ProtoPose.Pose.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoPose.PoseOrBuilder>(
                  getPose(),
                  getParentForChildren(),
                  isClean());
          pose_ = null;
        }
        return poseBuilder_;
      }

      private java.util.List<cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model> model_ =
        java.util.Collections.emptyList();
      private void ensureModelIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          model_ = new java.util.ArrayList<cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model>(model_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model, cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.ModelOrBuilder> modelBuilder_;

      /**
       * <code>repeated .gazebo.msgs.LogicalCameraImage.Model model = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief All the models seen by the LogicalCamera
       * </pre>
       */
      public java.util.List<cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model> getModelList() {
        if (modelBuilder_ == null) {
          return java.util.Collections.unmodifiableList(model_);
        } else {
          return modelBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .gazebo.msgs.LogicalCameraImage.Model model = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief All the models seen by the LogicalCamera
       * </pre>
       */
      public int getModelCount() {
        if (modelBuilder_ == null) {
          return model_.size();
        } else {
          return modelBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .gazebo.msgs.LogicalCameraImage.Model model = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief All the models seen by the LogicalCamera
       * </pre>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model getModel(int index) {
        if (modelBuilder_ == null) {
          return model_.get(index);
        } else {
          return modelBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .gazebo.msgs.LogicalCameraImage.Model model = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief All the models seen by the LogicalCamera
       * </pre>
       */
      public Builder setModel(
          int index, cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model value) {
        if (modelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModelIsMutable();
          model_.set(index, value);
          onChanged();
        } else {
          modelBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.LogicalCameraImage.Model model = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief All the models seen by the LogicalCamera
       * </pre>
       */
      public Builder setModel(
          int index, cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model.Builder builderForValue) {
        if (modelBuilder_ == null) {
          ensureModelIsMutable();
          model_.set(index, builderForValue.build());
          onChanged();
        } else {
          modelBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.LogicalCameraImage.Model model = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief All the models seen by the LogicalCamera
       * </pre>
       */
      public Builder addModel(cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model value) {
        if (modelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModelIsMutable();
          model_.add(value);
          onChanged();
        } else {
          modelBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.LogicalCameraImage.Model model = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief All the models seen by the LogicalCamera
       * </pre>
       */
      public Builder addModel(
          int index, cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model value) {
        if (modelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModelIsMutable();
          model_.add(index, value);
          onChanged();
        } else {
          modelBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.LogicalCameraImage.Model model = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief All the models seen by the LogicalCamera
       * </pre>
       */
      public Builder addModel(
          cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model.Builder builderForValue) {
        if (modelBuilder_ == null) {
          ensureModelIsMutable();
          model_.add(builderForValue.build());
          onChanged();
        } else {
          modelBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.LogicalCameraImage.Model model = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief All the models seen by the LogicalCamera
       * </pre>
       */
      public Builder addModel(
          int index, cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model.Builder builderForValue) {
        if (modelBuilder_ == null) {
          ensureModelIsMutable();
          model_.add(index, builderForValue.build());
          onChanged();
        } else {
          modelBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.LogicalCameraImage.Model model = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief All the models seen by the LogicalCamera
       * </pre>
       */
      public Builder addAllModel(
          java.lang.Iterable<? extends cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model> values) {
        if (modelBuilder_ == null) {
          ensureModelIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, model_);
          onChanged();
        } else {
          modelBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.LogicalCameraImage.Model model = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief All the models seen by the LogicalCamera
       * </pre>
       */
      public Builder clearModel() {
        if (modelBuilder_ == null) {
          model_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          modelBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.LogicalCameraImage.Model model = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief All the models seen by the LogicalCamera
       * </pre>
       */
      public Builder removeModel(int index) {
        if (modelBuilder_ == null) {
          ensureModelIsMutable();
          model_.remove(index);
          onChanged();
        } else {
          modelBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.LogicalCameraImage.Model model = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief All the models seen by the LogicalCamera
       * </pre>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model.Builder getModelBuilder(
          int index) {
        return getModelFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .gazebo.msgs.LogicalCameraImage.Model model = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief All the models seen by the LogicalCamera
       * </pre>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.ModelOrBuilder getModelOrBuilder(
          int index) {
        if (modelBuilder_ == null) {
          return model_.get(index);  } else {
          return modelBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .gazebo.msgs.LogicalCameraImage.Model model = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief All the models seen by the LogicalCamera
       * </pre>
       */
      public java.util.List<? extends cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.ModelOrBuilder> 
           getModelOrBuilderList() {
        if (modelBuilder_ != null) {
          return modelBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(model_);
        }
      }
      /**
       * <code>repeated .gazebo.msgs.LogicalCameraImage.Model model = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief All the models seen by the LogicalCamera
       * </pre>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model.Builder addModelBuilder() {
        return getModelFieldBuilder().addBuilder(
            cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model.getDefaultInstance());
      }
      /**
       * <code>repeated .gazebo.msgs.LogicalCameraImage.Model model = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief All the models seen by the LogicalCamera
       * </pre>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model.Builder addModelBuilder(
          int index) {
        return getModelFieldBuilder().addBuilder(
            index, cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model.getDefaultInstance());
      }
      /**
       * <code>repeated .gazebo.msgs.LogicalCameraImage.Model model = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief All the models seen by the LogicalCamera
       * </pre>
       */
      public java.util.List<cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model.Builder> 
           getModelBuilderList() {
        return getModelFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model, cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.ModelOrBuilder> 
          getModelFieldBuilder() {
        if (modelBuilder_ == null) {
          modelBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model, cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.Model.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoLogicalCameraImage.LogicalCameraImage.ModelOrBuilder>(
                  model_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          model_ = null;
        }
        return modelBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:gazebo.msgs.LogicalCameraImage)
    }

    static {
      defaultInstance = new LogicalCameraImage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gazebo.msgs.LogicalCameraImage)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gazebo_msgs_LogicalCameraImage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gazebo_msgs_LogicalCameraImage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gazebo_msgs_LogicalCameraImage_Model_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gazebo_msgs_LogicalCameraImage_Model_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\032logical_camera_image.proto\022\013gazebo.msg" +
      "s\032\npose.proto\"\243\001\n\022LogicalCameraImage\022\037\n\004" +
      "pose\030\001 \002(\0132\021.gazebo.msgs.Pose\0224\n\005model\030\002" +
      " \003(\0132%.gazebo.msgs.LogicalCameraImage.Mo" +
      "del\0326\n\005Model\022\014\n\004name\030\001 \002(\t\022\037\n\004pose\030\002 \002(\013" +
      "2\021.gazebo.msgs.PoseB:\n\037cn.autolabor.plug" +
      "in.gazebo.msgsB\027ProtoLogicalCameraImage"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          cn.autolabor.plugin.gazebo.msgs.ProtoPose.getDescriptor(),
        }, assigner);
    internal_static_gazebo_msgs_LogicalCameraImage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_gazebo_msgs_LogicalCameraImage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_gazebo_msgs_LogicalCameraImage_descriptor,
        new java.lang.String[] { "Pose", "Model", });
    internal_static_gazebo_msgs_LogicalCameraImage_Model_descriptor =
      internal_static_gazebo_msgs_LogicalCameraImage_descriptor.getNestedTypes().get(0);
    internal_static_gazebo_msgs_LogicalCameraImage_Model_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_gazebo_msgs_LogicalCameraImage_Model_descriptor,
        new java.lang.String[] { "Name", "Pose", });
    cn.autolabor.plugin.gazebo.msgs.ProtoPose.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
