// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: track_visual.proto

package cn.autolabor.plugin.gazebo.msgs;

public final class ProtoTrackVisual {
  private ProtoTrackVisual() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface TrackVisualOrBuilder extends
      // @@protoc_insertion_point(interface_extends:gazebo.msgs.TrackVisual)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *&#47; &#92;brief Name of the visual to track
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *&#47; &#92;brief Name of the visual to track
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *&#47; &#92;brief Name of the visual to track
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional uint32 id = 2;</code>
     *
     * <pre>
     *&#47; &#92;brief Id of the visual to track
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional uint32 id = 2;</code>
     *
     * <pre>
     *&#47; &#92;brief Id of the visual to track
     * </pre>
     */
    int getId();

    /**
     * <code>optional bool inherit_orientation = 3;</code>
     *
     * <pre>
     *&#47; &#92;brief True to have the tracking camera inherit the orientation of
     * / the tracked visual.
     * </pre>
     */
    boolean hasInheritOrientation();
    /**
     * <code>optional bool inherit_orientation = 3;</code>
     *
     * <pre>
     *&#47; &#92;brief True to have the tracking camera inherit the orientation of
     * / the tracked visual.
     * </pre>
     */
    boolean getInheritOrientation();

    /**
     * <code>optional double min_dist = 4;</code>
     *
     * <pre>
     *&#47; &#92;brief Minimum follow distance
     * </pre>
     */
    boolean hasMinDist();
    /**
     * <code>optional double min_dist = 4;</code>
     *
     * <pre>
     *&#47; &#92;brief Minimum follow distance
     * </pre>
     */
    double getMinDist();

    /**
     * <code>optional double max_dist = 5;</code>
     *
     * <pre>
     *&#47; &#92;brief Maximum follow distance
     * </pre>
     */
    boolean hasMaxDist();
    /**
     * <code>optional double max_dist = 5;</code>
     *
     * <pre>
     *&#47; &#92;brief Maximum follow distance
     * </pre>
     */
    double getMaxDist();

    /**
     * <code>optional bool static = 6;</code>
     *
     * <pre>
     *&#47; &#92;brief If set to true, the position of the camera is fixed.
     * </pre>
     */
    boolean hasStatic();
    /**
     * <code>optional bool static = 6;</code>
     *
     * <pre>
     *&#47; &#92;brief If set to true, the position of the camera is fixed.
     * </pre>
     */
    boolean getStatic();

    /**
     * <code>optional bool use_model_frame = 7;</code>
     *
     * <pre>
     *&#47; &#92;brief If set to true, the position of the camera is relative to the
     * / model reference frame.
     * </pre>
     */
    boolean hasUseModelFrame();
    /**
     * <code>optional bool use_model_frame = 7;</code>
     *
     * <pre>
     *&#47; &#92;brief If set to true, the position of the camera is relative to the
     * / model reference frame.
     * </pre>
     */
    boolean getUseModelFrame();

    /**
     * <code>optional .gazebo.msgs.Vector3d xyz = 8;</code>
     *
     * <pre>
     *&#47; &#92;brief Position of the camera.
     * </pre>
     */
    boolean hasXyz();
    /**
     * <code>optional .gazebo.msgs.Vector3d xyz = 8;</code>
     *
     * <pre>
     *&#47; &#92;brief Position of the camera.
     * </pre>
     */
    cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d getXyz();
    /**
     * <code>optional .gazebo.msgs.Vector3d xyz = 8;</code>
     *
     * <pre>
     *&#47; &#92;brief Position of the camera.
     * </pre>
     */
    cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3dOrBuilder getXyzOrBuilder();

    /**
     * <code>optional bool inherit_yaw = 9;</code>
     *
     * <pre>
     *&#47; &#92;brief If set to true, the camera inherits the yaw rotation of the model.
     * </pre>
     */
    boolean hasInheritYaw();
    /**
     * <code>optional bool inherit_yaw = 9;</code>
     *
     * <pre>
     *&#47; &#92;brief If set to true, the camera inherits the yaw rotation of the model.
     * </pre>
     */
    boolean getInheritYaw();
  }
  /**
   * Protobuf type {@code gazebo.msgs.TrackVisual}
   */
  public static final class TrackVisual extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:gazebo.msgs.TrackVisual)
      TrackVisualOrBuilder {
    // Use TrackVisual.newBuilder() to construct.
    private TrackVisual(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TrackVisual(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TrackVisual defaultInstance;
    public static TrackVisual getDefaultInstance() {
      return defaultInstance;
    }

    public TrackVisual getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TrackVisual(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              id_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              inheritOrientation_ = input.readBool();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              minDist_ = input.readDouble();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              maxDist_ = input.readDouble();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              static_ = input.readBool();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              useModelFrame_ = input.readBool();
              break;
            }
            case 66: {
              cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = xyz_.toBuilder();
              }
              xyz_ = input.readMessage(cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(xyz_);
                xyz_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              inheritYaw_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.autolabor.plugin.gazebo.msgs.ProtoTrackVisual.internal_static_gazebo_msgs_TrackVisual_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.autolabor.plugin.gazebo.msgs.ProtoTrackVisual.internal_static_gazebo_msgs_TrackVisual_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.autolabor.plugin.gazebo.msgs.ProtoTrackVisual.TrackVisual.class, cn.autolabor.plugin.gazebo.msgs.ProtoTrackVisual.TrackVisual.Builder.class);
    }

    public static com.google.protobuf.Parser<TrackVisual> PARSER =
        new com.google.protobuf.AbstractParser<TrackVisual>() {
      public TrackVisual parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TrackVisual(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TrackVisual> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *&#47; &#92;brief Name of the visual to track
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *&#47; &#92;brief Name of the visual to track
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     *&#47; &#92;brief Name of the visual to track
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 2;
    private int id_;
    /**
     * <code>optional uint32 id = 2;</code>
     *
     * <pre>
     *&#47; &#92;brief Id of the visual to track
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 id = 2;</code>
     *
     * <pre>
     *&#47; &#92;brief Id of the visual to track
     * </pre>
     */
    public int getId() {
      return id_;
    }

    public static final int INHERIT_ORIENTATION_FIELD_NUMBER = 3;
    private boolean inheritOrientation_;
    /**
     * <code>optional bool inherit_orientation = 3;</code>
     *
     * <pre>
     *&#47; &#92;brief True to have the tracking camera inherit the orientation of
     * / the tracked visual.
     * </pre>
     */
    public boolean hasInheritOrientation() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool inherit_orientation = 3;</code>
     *
     * <pre>
     *&#47; &#92;brief True to have the tracking camera inherit the orientation of
     * / the tracked visual.
     * </pre>
     */
    public boolean getInheritOrientation() {
      return inheritOrientation_;
    }

    public static final int MIN_DIST_FIELD_NUMBER = 4;
    private double minDist_;
    /**
     * <code>optional double min_dist = 4;</code>
     *
     * <pre>
     *&#47; &#92;brief Minimum follow distance
     * </pre>
     */
    public boolean hasMinDist() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional double min_dist = 4;</code>
     *
     * <pre>
     *&#47; &#92;brief Minimum follow distance
     * </pre>
     */
    public double getMinDist() {
      return minDist_;
    }

    public static final int MAX_DIST_FIELD_NUMBER = 5;
    private double maxDist_;
    /**
     * <code>optional double max_dist = 5;</code>
     *
     * <pre>
     *&#47; &#92;brief Maximum follow distance
     * </pre>
     */
    public boolean hasMaxDist() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional double max_dist = 5;</code>
     *
     * <pre>
     *&#47; &#92;brief Maximum follow distance
     * </pre>
     */
    public double getMaxDist() {
      return maxDist_;
    }

    public static final int STATIC_FIELD_NUMBER = 6;
    private boolean static_;
    /**
     * <code>optional bool static = 6;</code>
     *
     * <pre>
     *&#47; &#92;brief If set to true, the position of the camera is fixed.
     * </pre>
     */
    public boolean hasStatic() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool static = 6;</code>
     *
     * <pre>
     *&#47; &#92;brief If set to true, the position of the camera is fixed.
     * </pre>
     */
    public boolean getStatic() {
      return static_;
    }

    public static final int USE_MODEL_FRAME_FIELD_NUMBER = 7;
    private boolean useModelFrame_;
    /**
     * <code>optional bool use_model_frame = 7;</code>
     *
     * <pre>
     *&#47; &#92;brief If set to true, the position of the camera is relative to the
     * / model reference frame.
     * </pre>
     */
    public boolean hasUseModelFrame() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool use_model_frame = 7;</code>
     *
     * <pre>
     *&#47; &#92;brief If set to true, the position of the camera is relative to the
     * / model reference frame.
     * </pre>
     */
    public boolean getUseModelFrame() {
      return useModelFrame_;
    }

    public static final int XYZ_FIELD_NUMBER = 8;
    private cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d xyz_;
    /**
     * <code>optional .gazebo.msgs.Vector3d xyz = 8;</code>
     *
     * <pre>
     *&#47; &#92;brief Position of the camera.
     * </pre>
     */
    public boolean hasXyz() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .gazebo.msgs.Vector3d xyz = 8;</code>
     *
     * <pre>
     *&#47; &#92;brief Position of the camera.
     * </pre>
     */
    public cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d getXyz() {
      return xyz_;
    }
    /**
     * <code>optional .gazebo.msgs.Vector3d xyz = 8;</code>
     *
     * <pre>
     *&#47; &#92;brief Position of the camera.
     * </pre>
     */
    public cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3dOrBuilder getXyzOrBuilder() {
      return xyz_;
    }

    public static final int INHERIT_YAW_FIELD_NUMBER = 9;
    private boolean inheritYaw_;
    /**
     * <code>optional bool inherit_yaw = 9;</code>
     *
     * <pre>
     *&#47; &#92;brief If set to true, the camera inherits the yaw rotation of the model.
     * </pre>
     */
    public boolean hasInheritYaw() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional bool inherit_yaw = 9;</code>
     *
     * <pre>
     *&#47; &#92;brief If set to true, the camera inherits the yaw rotation of the model.
     * </pre>
     */
    public boolean getInheritYaw() {
      return inheritYaw_;
    }

    private void initFields() {
      name_ = "";
      id_ = 0;
      inheritOrientation_ = false;
      minDist_ = 0D;
      maxDist_ = 0D;
      static_ = false;
      useModelFrame_ = false;
      xyz_ = cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d.getDefaultInstance();
      inheritYaw_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasXyz()) {
        if (!getXyz().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, inheritOrientation_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, minDist_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, maxDist_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, static_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, useModelFrame_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(8, xyz_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBool(9, inheritYaw_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, inheritOrientation_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, minDist_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, maxDist_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, static_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, useModelFrame_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, xyz_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, inheritYaw_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cn.autolabor.plugin.gazebo.msgs.ProtoTrackVisual.TrackVisual parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.autolabor.plugin.gazebo.msgs.ProtoTrackVisual.TrackVisual parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.autolabor.plugin.gazebo.msgs.ProtoTrackVisual.TrackVisual parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.autolabor.plugin.gazebo.msgs.ProtoTrackVisual.TrackVisual parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.autolabor.plugin.gazebo.msgs.ProtoTrackVisual.TrackVisual parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cn.autolabor.plugin.gazebo.msgs.ProtoTrackVisual.TrackVisual parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cn.autolabor.plugin.gazebo.msgs.ProtoTrackVisual.TrackVisual parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cn.autolabor.plugin.gazebo.msgs.ProtoTrackVisual.TrackVisual parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cn.autolabor.plugin.gazebo.msgs.ProtoTrackVisual.TrackVisual parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cn.autolabor.plugin.gazebo.msgs.ProtoTrackVisual.TrackVisual parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cn.autolabor.plugin.gazebo.msgs.ProtoTrackVisual.TrackVisual prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gazebo.msgs.TrackVisual}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:gazebo.msgs.TrackVisual)
        cn.autolabor.plugin.gazebo.msgs.ProtoTrackVisual.TrackVisualOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.autolabor.plugin.gazebo.msgs.ProtoTrackVisual.internal_static_gazebo_msgs_TrackVisual_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.autolabor.plugin.gazebo.msgs.ProtoTrackVisual.internal_static_gazebo_msgs_TrackVisual_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.autolabor.plugin.gazebo.msgs.ProtoTrackVisual.TrackVisual.class, cn.autolabor.plugin.gazebo.msgs.ProtoTrackVisual.TrackVisual.Builder.class);
      }

      // Construct using cn.autolabor.plugin.gazebo.msgs.ProtoTrackVisual.TrackVisual.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getXyzFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        inheritOrientation_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        minDist_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        maxDist_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        static_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        useModelFrame_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        if (xyzBuilder_ == null) {
          xyz_ = cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d.getDefaultInstance();
        } else {
          xyzBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        inheritYaw_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.autolabor.plugin.gazebo.msgs.ProtoTrackVisual.internal_static_gazebo_msgs_TrackVisual_descriptor;
      }

      public cn.autolabor.plugin.gazebo.msgs.ProtoTrackVisual.TrackVisual getDefaultInstanceForType() {
        return cn.autolabor.plugin.gazebo.msgs.ProtoTrackVisual.TrackVisual.getDefaultInstance();
      }

      public cn.autolabor.plugin.gazebo.msgs.ProtoTrackVisual.TrackVisual build() {
        cn.autolabor.plugin.gazebo.msgs.ProtoTrackVisual.TrackVisual result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.autolabor.plugin.gazebo.msgs.ProtoTrackVisual.TrackVisual buildPartial() {
        cn.autolabor.plugin.gazebo.msgs.ProtoTrackVisual.TrackVisual result = new cn.autolabor.plugin.gazebo.msgs.ProtoTrackVisual.TrackVisual(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.inheritOrientation_ = inheritOrientation_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.minDist_ = minDist_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.maxDist_ = maxDist_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.static_ = static_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.useModelFrame_ = useModelFrame_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (xyzBuilder_ == null) {
          result.xyz_ = xyz_;
        } else {
          result.xyz_ = xyzBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.inheritYaw_ = inheritYaw_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.autolabor.plugin.gazebo.msgs.ProtoTrackVisual.TrackVisual) {
          return mergeFrom((cn.autolabor.plugin.gazebo.msgs.ProtoTrackVisual.TrackVisual)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.autolabor.plugin.gazebo.msgs.ProtoTrackVisual.TrackVisual other) {
        if (other == cn.autolabor.plugin.gazebo.msgs.ProtoTrackVisual.TrackVisual.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasInheritOrientation()) {
          setInheritOrientation(other.getInheritOrientation());
        }
        if (other.hasMinDist()) {
          setMinDist(other.getMinDist());
        }
        if (other.hasMaxDist()) {
          setMaxDist(other.getMaxDist());
        }
        if (other.hasStatic()) {
          setStatic(other.getStatic());
        }
        if (other.hasUseModelFrame()) {
          setUseModelFrame(other.getUseModelFrame());
        }
        if (other.hasXyz()) {
          mergeXyz(other.getXyz());
        }
        if (other.hasInheritYaw()) {
          setInheritYaw(other.getInheritYaw());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (hasXyz()) {
          if (!getXyz().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.autolabor.plugin.gazebo.msgs.ProtoTrackVisual.TrackVisual parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.autolabor.plugin.gazebo.msgs.ProtoTrackVisual.TrackVisual) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *&#47; &#92;brief Name of the visual to track
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *&#47; &#92;brief Name of the visual to track
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *&#47; &#92;brief Name of the visual to track
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *&#47; &#92;brief Name of the visual to track
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *&#47; &#92;brief Name of the visual to track
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       *&#47; &#92;brief Name of the visual to track
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private int id_ ;
      /**
       * <code>optional uint32 id = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief Id of the visual to track
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 id = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief Id of the visual to track
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional uint32 id = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief Id of the visual to track
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000002;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 id = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief Id of the visual to track
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = 0;
        onChanged();
        return this;
      }

      private boolean inheritOrientation_ ;
      /**
       * <code>optional bool inherit_orientation = 3;</code>
       *
       * <pre>
       *&#47; &#92;brief True to have the tracking camera inherit the orientation of
       * / the tracked visual.
       * </pre>
       */
      public boolean hasInheritOrientation() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool inherit_orientation = 3;</code>
       *
       * <pre>
       *&#47; &#92;brief True to have the tracking camera inherit the orientation of
       * / the tracked visual.
       * </pre>
       */
      public boolean getInheritOrientation() {
        return inheritOrientation_;
      }
      /**
       * <code>optional bool inherit_orientation = 3;</code>
       *
       * <pre>
       *&#47; &#92;brief True to have the tracking camera inherit the orientation of
       * / the tracked visual.
       * </pre>
       */
      public Builder setInheritOrientation(boolean value) {
        bitField0_ |= 0x00000004;
        inheritOrientation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool inherit_orientation = 3;</code>
       *
       * <pre>
       *&#47; &#92;brief True to have the tracking camera inherit the orientation of
       * / the tracked visual.
       * </pre>
       */
      public Builder clearInheritOrientation() {
        bitField0_ = (bitField0_ & ~0x00000004);
        inheritOrientation_ = false;
        onChanged();
        return this;
      }

      private double minDist_ ;
      /**
       * <code>optional double min_dist = 4;</code>
       *
       * <pre>
       *&#47; &#92;brief Minimum follow distance
       * </pre>
       */
      public boolean hasMinDist() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional double min_dist = 4;</code>
       *
       * <pre>
       *&#47; &#92;brief Minimum follow distance
       * </pre>
       */
      public double getMinDist() {
        return minDist_;
      }
      /**
       * <code>optional double min_dist = 4;</code>
       *
       * <pre>
       *&#47; &#92;brief Minimum follow distance
       * </pre>
       */
      public Builder setMinDist(double value) {
        bitField0_ |= 0x00000008;
        minDist_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double min_dist = 4;</code>
       *
       * <pre>
       *&#47; &#92;brief Minimum follow distance
       * </pre>
       */
      public Builder clearMinDist() {
        bitField0_ = (bitField0_ & ~0x00000008);
        minDist_ = 0D;
        onChanged();
        return this;
      }

      private double maxDist_ ;
      /**
       * <code>optional double max_dist = 5;</code>
       *
       * <pre>
       *&#47; &#92;brief Maximum follow distance
       * </pre>
       */
      public boolean hasMaxDist() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional double max_dist = 5;</code>
       *
       * <pre>
       *&#47; &#92;brief Maximum follow distance
       * </pre>
       */
      public double getMaxDist() {
        return maxDist_;
      }
      /**
       * <code>optional double max_dist = 5;</code>
       *
       * <pre>
       *&#47; &#92;brief Maximum follow distance
       * </pre>
       */
      public Builder setMaxDist(double value) {
        bitField0_ |= 0x00000010;
        maxDist_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double max_dist = 5;</code>
       *
       * <pre>
       *&#47; &#92;brief Maximum follow distance
       * </pre>
       */
      public Builder clearMaxDist() {
        bitField0_ = (bitField0_ & ~0x00000010);
        maxDist_ = 0D;
        onChanged();
        return this;
      }

      private boolean static_ ;
      /**
       * <code>optional bool static = 6;</code>
       *
       * <pre>
       *&#47; &#92;brief If set to true, the position of the camera is fixed.
       * </pre>
       */
      public boolean hasStatic() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool static = 6;</code>
       *
       * <pre>
       *&#47; &#92;brief If set to true, the position of the camera is fixed.
       * </pre>
       */
      public boolean getStatic() {
        return static_;
      }
      /**
       * <code>optional bool static = 6;</code>
       *
       * <pre>
       *&#47; &#92;brief If set to true, the position of the camera is fixed.
       * </pre>
       */
      public Builder setStatic(boolean value) {
        bitField0_ |= 0x00000020;
        static_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool static = 6;</code>
       *
       * <pre>
       *&#47; &#92;brief If set to true, the position of the camera is fixed.
       * </pre>
       */
      public Builder clearStatic() {
        bitField0_ = (bitField0_ & ~0x00000020);
        static_ = false;
        onChanged();
        return this;
      }

      private boolean useModelFrame_ ;
      /**
       * <code>optional bool use_model_frame = 7;</code>
       *
       * <pre>
       *&#47; &#92;brief If set to true, the position of the camera is relative to the
       * / model reference frame.
       * </pre>
       */
      public boolean hasUseModelFrame() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool use_model_frame = 7;</code>
       *
       * <pre>
       *&#47; &#92;brief If set to true, the position of the camera is relative to the
       * / model reference frame.
       * </pre>
       */
      public boolean getUseModelFrame() {
        return useModelFrame_;
      }
      /**
       * <code>optional bool use_model_frame = 7;</code>
       *
       * <pre>
       *&#47; &#92;brief If set to true, the position of the camera is relative to the
       * / model reference frame.
       * </pre>
       */
      public Builder setUseModelFrame(boolean value) {
        bitField0_ |= 0x00000040;
        useModelFrame_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool use_model_frame = 7;</code>
       *
       * <pre>
       *&#47; &#92;brief If set to true, the position of the camera is relative to the
       * / model reference frame.
       * </pre>
       */
      public Builder clearUseModelFrame() {
        bitField0_ = (bitField0_ & ~0x00000040);
        useModelFrame_ = false;
        onChanged();
        return this;
      }

      private cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d xyz_ = cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d, cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3dOrBuilder> xyzBuilder_;
      /**
       * <code>optional .gazebo.msgs.Vector3d xyz = 8;</code>
       *
       * <pre>
       *&#47; &#92;brief Position of the camera.
       * </pre>
       */
      public boolean hasXyz() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .gazebo.msgs.Vector3d xyz = 8;</code>
       *
       * <pre>
       *&#47; &#92;brief Position of the camera.
       * </pre>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d getXyz() {
        if (xyzBuilder_ == null) {
          return xyz_;
        } else {
          return xyzBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gazebo.msgs.Vector3d xyz = 8;</code>
       *
       * <pre>
       *&#47; &#92;brief Position of the camera.
       * </pre>
       */
      public Builder setXyz(cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d value) {
        if (xyzBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          xyz_ = value;
          onChanged();
        } else {
          xyzBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.Vector3d xyz = 8;</code>
       *
       * <pre>
       *&#47; &#92;brief Position of the camera.
       * </pre>
       */
      public Builder setXyz(
          cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d.Builder builderForValue) {
        if (xyzBuilder_ == null) {
          xyz_ = builderForValue.build();
          onChanged();
        } else {
          xyzBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.Vector3d xyz = 8;</code>
       *
       * <pre>
       *&#47; &#92;brief Position of the camera.
       * </pre>
       */
      public Builder mergeXyz(cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d value) {
        if (xyzBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              xyz_ != cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d.getDefaultInstance()) {
            xyz_ =
              cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d.newBuilder(xyz_).mergeFrom(value).buildPartial();
          } else {
            xyz_ = value;
          }
          onChanged();
        } else {
          xyzBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.Vector3d xyz = 8;</code>
       *
       * <pre>
       *&#47; &#92;brief Position of the camera.
       * </pre>
       */
      public Builder clearXyz() {
        if (xyzBuilder_ == null) {
          xyz_ = cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d.getDefaultInstance();
          onChanged();
        } else {
          xyzBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.Vector3d xyz = 8;</code>
       *
       * <pre>
       *&#47; &#92;brief Position of the camera.
       * </pre>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d.Builder getXyzBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getXyzFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gazebo.msgs.Vector3d xyz = 8;</code>
       *
       * <pre>
       *&#47; &#92;brief Position of the camera.
       * </pre>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3dOrBuilder getXyzOrBuilder() {
        if (xyzBuilder_ != null) {
          return xyzBuilder_.getMessageOrBuilder();
        } else {
          return xyz_;
        }
      }
      /**
       * <code>optional .gazebo.msgs.Vector3d xyz = 8;</code>
       *
       * <pre>
       *&#47; &#92;brief Position of the camera.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d, cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3dOrBuilder> 
          getXyzFieldBuilder() {
        if (xyzBuilder_ == null) {
          xyzBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d, cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3dOrBuilder>(
                  getXyz(),
                  getParentForChildren(),
                  isClean());
          xyz_ = null;
        }
        return xyzBuilder_;
      }

      private boolean inheritYaw_ ;
      /**
       * <code>optional bool inherit_yaw = 9;</code>
       *
       * <pre>
       *&#47; &#92;brief If set to true, the camera inherits the yaw rotation of the model.
       * </pre>
       */
      public boolean hasInheritYaw() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool inherit_yaw = 9;</code>
       *
       * <pre>
       *&#47; &#92;brief If set to true, the camera inherits the yaw rotation of the model.
       * </pre>
       */
      public boolean getInheritYaw() {
        return inheritYaw_;
      }
      /**
       * <code>optional bool inherit_yaw = 9;</code>
       *
       * <pre>
       *&#47; &#92;brief If set to true, the camera inherits the yaw rotation of the model.
       * </pre>
       */
      public Builder setInheritYaw(boolean value) {
        bitField0_ |= 0x00000100;
        inheritYaw_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool inherit_yaw = 9;</code>
       *
       * <pre>
       *&#47; &#92;brief If set to true, the camera inherits the yaw rotation of the model.
       * </pre>
       */
      public Builder clearInheritYaw() {
        bitField0_ = (bitField0_ & ~0x00000100);
        inheritYaw_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gazebo.msgs.TrackVisual)
    }

    static {
      defaultInstance = new TrackVisual(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gazebo.msgs.TrackVisual)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gazebo_msgs_TrackVisual_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gazebo_msgs_TrackVisual_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022track_visual.proto\022\013gazebo.msgs\032\016vecto" +
      "r3d.proto\"\312\001\n\013TrackVisual\022\014\n\004name\030\001 \002(\t\022" +
      "\n\n\002id\030\002 \001(\r\022\033\n\023inherit_orientation\030\003 \001(\010" +
      "\022\020\n\010min_dist\030\004 \001(\001\022\020\n\010max_dist\030\005 \001(\001\022\016\n\006" +
      "static\030\006 \001(\010\022\027\n\017use_model_frame\030\007 \001(\010\022\"\n" +
      "\003xyz\030\010 \001(\0132\025.gazebo.msgs.Vector3d\022\023\n\013inh" +
      "erit_yaw\030\t \001(\010B3\n\037cn.autolabor.plugin.ga" +
      "zebo.msgsB\020ProtoTrackVisual"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.getDescriptor(),
        }, assigner);
    internal_static_gazebo_msgs_TrackVisual_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_gazebo_msgs_TrackVisual_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_gazebo_msgs_TrackVisual_descriptor,
        new java.lang.String[] { "Name", "Id", "InheritOrientation", "MinDist", "MaxDist", "Static", "UseModelFrame", "Xyz", "InheritYaw", });
    cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
