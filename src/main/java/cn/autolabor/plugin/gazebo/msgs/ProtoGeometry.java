// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: geometry.proto

package cn.autolabor.plugin.gazebo.msgs;

public final class ProtoGeometry {
  private ProtoGeometry() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface GeometryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:gazebo.msgs.Geometry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .gazebo.msgs.Geometry.Type type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>optional .gazebo.msgs.Geometry.Type type = 1;</code>
     */
    cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry.Type getType();

    /**
     * <code>optional .gazebo.msgs.BoxGeom box = 2;</code>
     */
    boolean hasBox();
    /**
     * <code>optional .gazebo.msgs.BoxGeom box = 2;</code>
     */
    cn.autolabor.plugin.gazebo.msgs.ProtoBoxgeom.BoxGeom getBox();
    /**
     * <code>optional .gazebo.msgs.BoxGeom box = 2;</code>
     */
    cn.autolabor.plugin.gazebo.msgs.ProtoBoxgeom.BoxGeomOrBuilder getBoxOrBuilder();

    /**
     * <code>optional .gazebo.msgs.CylinderGeom cylinder = 3;</code>
     */
    boolean hasCylinder();
    /**
     * <code>optional .gazebo.msgs.CylinderGeom cylinder = 3;</code>
     */
    cn.autolabor.plugin.gazebo.msgs.ProtoCylindergeom.CylinderGeom getCylinder();
    /**
     * <code>optional .gazebo.msgs.CylinderGeom cylinder = 3;</code>
     */
    cn.autolabor.plugin.gazebo.msgs.ProtoCylindergeom.CylinderGeomOrBuilder getCylinderOrBuilder();

    /**
     * <code>optional .gazebo.msgs.PlaneGeom plane = 4;</code>
     */
    boolean hasPlane();
    /**
     * <code>optional .gazebo.msgs.PlaneGeom plane = 4;</code>
     */
    cn.autolabor.plugin.gazebo.msgs.ProtoPlanegeom.PlaneGeom getPlane();
    /**
     * <code>optional .gazebo.msgs.PlaneGeom plane = 4;</code>
     */
    cn.autolabor.plugin.gazebo.msgs.ProtoPlanegeom.PlaneGeomOrBuilder getPlaneOrBuilder();

    /**
     * <code>optional .gazebo.msgs.SphereGeom sphere = 5;</code>
     */
    boolean hasSphere();
    /**
     * <code>optional .gazebo.msgs.SphereGeom sphere = 5;</code>
     */
    cn.autolabor.plugin.gazebo.msgs.ProtoSpheregeom.SphereGeom getSphere();
    /**
     * <code>optional .gazebo.msgs.SphereGeom sphere = 5;</code>
     */
    cn.autolabor.plugin.gazebo.msgs.ProtoSpheregeom.SphereGeomOrBuilder getSphereOrBuilder();

    /**
     * <code>optional .gazebo.msgs.ImageGeom image = 6;</code>
     */
    boolean hasImage();
    /**
     * <code>optional .gazebo.msgs.ImageGeom image = 6;</code>
     */
    cn.autolabor.plugin.gazebo.msgs.ProtoImagegeom.ImageGeom getImage();
    /**
     * <code>optional .gazebo.msgs.ImageGeom image = 6;</code>
     */
    cn.autolabor.plugin.gazebo.msgs.ProtoImagegeom.ImageGeomOrBuilder getImageOrBuilder();

    /**
     * <code>optional .gazebo.msgs.HeightmapGeom heightmap = 7;</code>
     */
    boolean hasHeightmap();
    /**
     * <code>optional .gazebo.msgs.HeightmapGeom heightmap = 7;</code>
     */
    cn.autolabor.plugin.gazebo.msgs.ProtoHeightmapgeom.HeightmapGeom getHeightmap();
    /**
     * <code>optional .gazebo.msgs.HeightmapGeom heightmap = 7;</code>
     */
    cn.autolabor.plugin.gazebo.msgs.ProtoHeightmapgeom.HeightmapGeomOrBuilder getHeightmapOrBuilder();

    /**
     * <code>optional .gazebo.msgs.MeshGeom mesh = 8;</code>
     */
    boolean hasMesh();
    /**
     * <code>optional .gazebo.msgs.MeshGeom mesh = 8;</code>
     */
    cn.autolabor.plugin.gazebo.msgs.ProtoMeshgeom.MeshGeom getMesh();
    /**
     * <code>optional .gazebo.msgs.MeshGeom mesh = 8;</code>
     */
    cn.autolabor.plugin.gazebo.msgs.ProtoMeshgeom.MeshGeomOrBuilder getMeshOrBuilder();

    /**
     * <code>repeated .gazebo.msgs.Vector3d points = 9;</code>
     */
    java.util.List<cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d> 
        getPointsList();
    /**
     * <code>repeated .gazebo.msgs.Vector3d points = 9;</code>
     */
    cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d getPoints(int index);
    /**
     * <code>repeated .gazebo.msgs.Vector3d points = 9;</code>
     */
    int getPointsCount();
    /**
     * <code>repeated .gazebo.msgs.Vector3d points = 9;</code>
     */
    java.util.List<? extends cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3dOrBuilder> 
        getPointsOrBuilderList();
    /**
     * <code>repeated .gazebo.msgs.Vector3d points = 9;</code>
     */
    cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3dOrBuilder getPointsOrBuilder(
        int index);

    /**
     * <code>repeated .gazebo.msgs.Polyline polyline = 10;</code>
     */
    java.util.List<cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.Polyline> 
        getPolylineList();
    /**
     * <code>repeated .gazebo.msgs.Polyline polyline = 10;</code>
     */
    cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.Polyline getPolyline(int index);
    /**
     * <code>repeated .gazebo.msgs.Polyline polyline = 10;</code>
     */
    int getPolylineCount();
    /**
     * <code>repeated .gazebo.msgs.Polyline polyline = 10;</code>
     */
    java.util.List<? extends cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.PolylineOrBuilder> 
        getPolylineOrBuilderList();
    /**
     * <code>repeated .gazebo.msgs.Polyline polyline = 10;</code>
     */
    cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.PolylineOrBuilder getPolylineOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code gazebo.msgs.Geometry}
   */
  public static final class Geometry extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:gazebo.msgs.Geometry)
      GeometryOrBuilder {
    // Use Geometry.newBuilder() to construct.
    private Geometry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Geometry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Geometry defaultInstance;
    public static Geometry getDefaultInstance() {
      return defaultInstance;
    }

    public Geometry getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Geometry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry.Type value = cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 18: {
              cn.autolabor.plugin.gazebo.msgs.ProtoBoxgeom.BoxGeom.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = box_.toBuilder();
              }
              box_ = input.readMessage(cn.autolabor.plugin.gazebo.msgs.ProtoBoxgeom.BoxGeom.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(box_);
                box_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              cn.autolabor.plugin.gazebo.msgs.ProtoCylindergeom.CylinderGeom.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = cylinder_.toBuilder();
              }
              cylinder_ = input.readMessage(cn.autolabor.plugin.gazebo.msgs.ProtoCylindergeom.CylinderGeom.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cylinder_);
                cylinder_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              cn.autolabor.plugin.gazebo.msgs.ProtoPlanegeom.PlaneGeom.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = plane_.toBuilder();
              }
              plane_ = input.readMessage(cn.autolabor.plugin.gazebo.msgs.ProtoPlanegeom.PlaneGeom.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(plane_);
                plane_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              cn.autolabor.plugin.gazebo.msgs.ProtoSpheregeom.SphereGeom.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = sphere_.toBuilder();
              }
              sphere_ = input.readMessage(cn.autolabor.plugin.gazebo.msgs.ProtoSpheregeom.SphereGeom.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sphere_);
                sphere_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              cn.autolabor.plugin.gazebo.msgs.ProtoImagegeom.ImageGeom.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = image_.toBuilder();
              }
              image_ = input.readMessage(cn.autolabor.plugin.gazebo.msgs.ProtoImagegeom.ImageGeom.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(image_);
                image_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 58: {
              cn.autolabor.plugin.gazebo.msgs.ProtoHeightmapgeom.HeightmapGeom.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = heightmap_.toBuilder();
              }
              heightmap_ = input.readMessage(cn.autolabor.plugin.gazebo.msgs.ProtoHeightmapgeom.HeightmapGeom.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(heightmap_);
                heightmap_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 66: {
              cn.autolabor.plugin.gazebo.msgs.ProtoMeshgeom.MeshGeom.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = mesh_.toBuilder();
              }
              mesh_ = input.readMessage(cn.autolabor.plugin.gazebo.msgs.ProtoMeshgeom.MeshGeom.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(mesh_);
                mesh_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                points_ = new java.util.ArrayList<cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d>();
                mutable_bitField0_ |= 0x00000100;
              }
              points_.add(input.readMessage(cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d.PARSER, extensionRegistry));
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                polyline_ = new java.util.ArrayList<cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.Polyline>();
                mutable_bitField0_ |= 0x00000200;
              }
              polyline_.add(input.readMessage(cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.Polyline.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          points_ = java.util.Collections.unmodifiableList(points_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          polyline_ = java.util.Collections.unmodifiableList(polyline_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.internal_static_gazebo_msgs_Geometry_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.internal_static_gazebo_msgs_Geometry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry.class, cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry.Builder.class);
    }

    public static com.google.protobuf.Parser<Geometry> PARSER =
        new com.google.protobuf.AbstractParser<Geometry>() {
      public Geometry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Geometry(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Geometry> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code gazebo.msgs.Geometry.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>BOX = 1;</code>
       */
      BOX(0, 1),
      /**
       * <code>CYLINDER = 2;</code>
       */
      CYLINDER(1, 2),
      /**
       * <code>SPHERE = 3;</code>
       */
      SPHERE(2, 3),
      /**
       * <code>PLANE = 4;</code>
       */
      PLANE(3, 4),
      /**
       * <code>IMAGE = 5;</code>
       */
      IMAGE(4, 5),
      /**
       * <code>HEIGHTMAP = 6;</code>
       */
      HEIGHTMAP(5, 6),
      /**
       * <code>MESH = 7;</code>
       */
      MESH(6, 7),
      /**
       * <code>TRIANGLE_FAN = 8;</code>
       */
      TRIANGLE_FAN(7, 8),
      /**
       * <code>LINE_STRIP = 9;</code>
       */
      LINE_STRIP(8, 9),
      /**
       * <code>POLYLINE = 10;</code>
       */
      POLYLINE(9, 10),
      /**
       * <code>EMPTY = 11;</code>
       */
      EMPTY(10, 11),
      ;

      /**
       * <code>BOX = 1;</code>
       */
      public static final int BOX_VALUE = 1;
      /**
       * <code>CYLINDER = 2;</code>
       */
      public static final int CYLINDER_VALUE = 2;
      /**
       * <code>SPHERE = 3;</code>
       */
      public static final int SPHERE_VALUE = 3;
      /**
       * <code>PLANE = 4;</code>
       */
      public static final int PLANE_VALUE = 4;
      /**
       * <code>IMAGE = 5;</code>
       */
      public static final int IMAGE_VALUE = 5;
      /**
       * <code>HEIGHTMAP = 6;</code>
       */
      public static final int HEIGHTMAP_VALUE = 6;
      /**
       * <code>MESH = 7;</code>
       */
      public static final int MESH_VALUE = 7;
      /**
       * <code>TRIANGLE_FAN = 8;</code>
       */
      public static final int TRIANGLE_FAN_VALUE = 8;
      /**
       * <code>LINE_STRIP = 9;</code>
       */
      public static final int LINE_STRIP_VALUE = 9;
      /**
       * <code>POLYLINE = 10;</code>
       */
      public static final int POLYLINE_VALUE = 10;
      /**
       * <code>EMPTY = 11;</code>
       */
      public static final int EMPTY_VALUE = 11;


      public final int getNumber() { return value; }

      public static Type valueOf(int value) {
        switch (value) {
          case 1: return BOX;
          case 2: return CYLINDER;
          case 3: return SPHERE;
          case 4: return PLANE;
          case 5: return IMAGE;
          case 6: return HEIGHTMAP;
          case 7: return MESH;
          case 8: return TRIANGLE_FAN;
          case 9: return LINE_STRIP;
          case 10: return POLYLINE;
          case 11: return EMPTY;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Type(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:gazebo.msgs.Geometry.Type)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry.Type type_;
    /**
     * <code>optional .gazebo.msgs.Geometry.Type type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .gazebo.msgs.Geometry.Type type = 1;</code>
     */
    public cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry.Type getType() {
      return type_;
    }

    public static final int BOX_FIELD_NUMBER = 2;
    private cn.autolabor.plugin.gazebo.msgs.ProtoBoxgeom.BoxGeom box_;
    /**
     * <code>optional .gazebo.msgs.BoxGeom box = 2;</code>
     */
    public boolean hasBox() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .gazebo.msgs.BoxGeom box = 2;</code>
     */
    public cn.autolabor.plugin.gazebo.msgs.ProtoBoxgeom.BoxGeom getBox() {
      return box_;
    }
    /**
     * <code>optional .gazebo.msgs.BoxGeom box = 2;</code>
     */
    public cn.autolabor.plugin.gazebo.msgs.ProtoBoxgeom.BoxGeomOrBuilder getBoxOrBuilder() {
      return box_;
    }

    public static final int CYLINDER_FIELD_NUMBER = 3;
    private cn.autolabor.plugin.gazebo.msgs.ProtoCylindergeom.CylinderGeom cylinder_;
    /**
     * <code>optional .gazebo.msgs.CylinderGeom cylinder = 3;</code>
     */
    public boolean hasCylinder() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .gazebo.msgs.CylinderGeom cylinder = 3;</code>
     */
    public cn.autolabor.plugin.gazebo.msgs.ProtoCylindergeom.CylinderGeom getCylinder() {
      return cylinder_;
    }
    /**
     * <code>optional .gazebo.msgs.CylinderGeom cylinder = 3;</code>
     */
    public cn.autolabor.plugin.gazebo.msgs.ProtoCylindergeom.CylinderGeomOrBuilder getCylinderOrBuilder() {
      return cylinder_;
    }

    public static final int PLANE_FIELD_NUMBER = 4;
    private cn.autolabor.plugin.gazebo.msgs.ProtoPlanegeom.PlaneGeom plane_;
    /**
     * <code>optional .gazebo.msgs.PlaneGeom plane = 4;</code>
     */
    public boolean hasPlane() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .gazebo.msgs.PlaneGeom plane = 4;</code>
     */
    public cn.autolabor.plugin.gazebo.msgs.ProtoPlanegeom.PlaneGeom getPlane() {
      return plane_;
    }
    /**
     * <code>optional .gazebo.msgs.PlaneGeom plane = 4;</code>
     */
    public cn.autolabor.plugin.gazebo.msgs.ProtoPlanegeom.PlaneGeomOrBuilder getPlaneOrBuilder() {
      return plane_;
    }

    public static final int SPHERE_FIELD_NUMBER = 5;
    private cn.autolabor.plugin.gazebo.msgs.ProtoSpheregeom.SphereGeom sphere_;
    /**
     * <code>optional .gazebo.msgs.SphereGeom sphere = 5;</code>
     */
    public boolean hasSphere() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .gazebo.msgs.SphereGeom sphere = 5;</code>
     */
    public cn.autolabor.plugin.gazebo.msgs.ProtoSpheregeom.SphereGeom getSphere() {
      return sphere_;
    }
    /**
     * <code>optional .gazebo.msgs.SphereGeom sphere = 5;</code>
     */
    public cn.autolabor.plugin.gazebo.msgs.ProtoSpheregeom.SphereGeomOrBuilder getSphereOrBuilder() {
      return sphere_;
    }

    public static final int IMAGE_FIELD_NUMBER = 6;
    private cn.autolabor.plugin.gazebo.msgs.ProtoImagegeom.ImageGeom image_;
    /**
     * <code>optional .gazebo.msgs.ImageGeom image = 6;</code>
     */
    public boolean hasImage() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .gazebo.msgs.ImageGeom image = 6;</code>
     */
    public cn.autolabor.plugin.gazebo.msgs.ProtoImagegeom.ImageGeom getImage() {
      return image_;
    }
    /**
     * <code>optional .gazebo.msgs.ImageGeom image = 6;</code>
     */
    public cn.autolabor.plugin.gazebo.msgs.ProtoImagegeom.ImageGeomOrBuilder getImageOrBuilder() {
      return image_;
    }

    public static final int HEIGHTMAP_FIELD_NUMBER = 7;
    private cn.autolabor.plugin.gazebo.msgs.ProtoHeightmapgeom.HeightmapGeom heightmap_;
    /**
     * <code>optional .gazebo.msgs.HeightmapGeom heightmap = 7;</code>
     */
    public boolean hasHeightmap() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .gazebo.msgs.HeightmapGeom heightmap = 7;</code>
     */
    public cn.autolabor.plugin.gazebo.msgs.ProtoHeightmapgeom.HeightmapGeom getHeightmap() {
      return heightmap_;
    }
    /**
     * <code>optional .gazebo.msgs.HeightmapGeom heightmap = 7;</code>
     */
    public cn.autolabor.plugin.gazebo.msgs.ProtoHeightmapgeom.HeightmapGeomOrBuilder getHeightmapOrBuilder() {
      return heightmap_;
    }

    public static final int MESH_FIELD_NUMBER = 8;
    private cn.autolabor.plugin.gazebo.msgs.ProtoMeshgeom.MeshGeom mesh_;
    /**
     * <code>optional .gazebo.msgs.MeshGeom mesh = 8;</code>
     */
    public boolean hasMesh() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .gazebo.msgs.MeshGeom mesh = 8;</code>
     */
    public cn.autolabor.plugin.gazebo.msgs.ProtoMeshgeom.MeshGeom getMesh() {
      return mesh_;
    }
    /**
     * <code>optional .gazebo.msgs.MeshGeom mesh = 8;</code>
     */
    public cn.autolabor.plugin.gazebo.msgs.ProtoMeshgeom.MeshGeomOrBuilder getMeshOrBuilder() {
      return mesh_;
    }

    public static final int POINTS_FIELD_NUMBER = 9;
    private java.util.List<cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d> points_;
    /**
     * <code>repeated .gazebo.msgs.Vector3d points = 9;</code>
     */
    public java.util.List<cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d> getPointsList() {
      return points_;
    }
    /**
     * <code>repeated .gazebo.msgs.Vector3d points = 9;</code>
     */
    public java.util.List<? extends cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3dOrBuilder> 
        getPointsOrBuilderList() {
      return points_;
    }
    /**
     * <code>repeated .gazebo.msgs.Vector3d points = 9;</code>
     */
    public int getPointsCount() {
      return points_.size();
    }
    /**
     * <code>repeated .gazebo.msgs.Vector3d points = 9;</code>
     */
    public cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d getPoints(int index) {
      return points_.get(index);
    }
    /**
     * <code>repeated .gazebo.msgs.Vector3d points = 9;</code>
     */
    public cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3dOrBuilder getPointsOrBuilder(
        int index) {
      return points_.get(index);
    }

    public static final int POLYLINE_FIELD_NUMBER = 10;
    private java.util.List<cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.Polyline> polyline_;
    /**
     * <code>repeated .gazebo.msgs.Polyline polyline = 10;</code>
     */
    public java.util.List<cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.Polyline> getPolylineList() {
      return polyline_;
    }
    /**
     * <code>repeated .gazebo.msgs.Polyline polyline = 10;</code>
     */
    public java.util.List<? extends cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.PolylineOrBuilder> 
        getPolylineOrBuilderList() {
      return polyline_;
    }
    /**
     * <code>repeated .gazebo.msgs.Polyline polyline = 10;</code>
     */
    public int getPolylineCount() {
      return polyline_.size();
    }
    /**
     * <code>repeated .gazebo.msgs.Polyline polyline = 10;</code>
     */
    public cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.Polyline getPolyline(int index) {
      return polyline_.get(index);
    }
    /**
     * <code>repeated .gazebo.msgs.Polyline polyline = 10;</code>
     */
    public cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.PolylineOrBuilder getPolylineOrBuilder(
        int index) {
      return polyline_.get(index);
    }

    private void initFields() {
      type_ = cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry.Type.BOX;
      box_ = cn.autolabor.plugin.gazebo.msgs.ProtoBoxgeom.BoxGeom.getDefaultInstance();
      cylinder_ = cn.autolabor.plugin.gazebo.msgs.ProtoCylindergeom.CylinderGeom.getDefaultInstance();
      plane_ = cn.autolabor.plugin.gazebo.msgs.ProtoPlanegeom.PlaneGeom.getDefaultInstance();
      sphere_ = cn.autolabor.plugin.gazebo.msgs.ProtoSpheregeom.SphereGeom.getDefaultInstance();
      image_ = cn.autolabor.plugin.gazebo.msgs.ProtoImagegeom.ImageGeom.getDefaultInstance();
      heightmap_ = cn.autolabor.plugin.gazebo.msgs.ProtoHeightmapgeom.HeightmapGeom.getDefaultInstance();
      mesh_ = cn.autolabor.plugin.gazebo.msgs.ProtoMeshgeom.MeshGeom.getDefaultInstance();
      points_ = java.util.Collections.emptyList();
      polyline_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasBox()) {
        if (!getBox().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasCylinder()) {
        if (!getCylinder().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasPlane()) {
        if (!getPlane().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSphere()) {
        if (!getSphere().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasImage()) {
        if (!getImage().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasHeightmap()) {
        if (!getHeightmap().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasMesh()) {
        if (!getMesh().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getPointsCount(); i++) {
        if (!getPoints(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getPolylineCount(); i++) {
        if (!getPolyline(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, box_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, cylinder_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, plane_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, sphere_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, image_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, heightmap_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(8, mesh_);
      }
      for (int i = 0; i < points_.size(); i++) {
        output.writeMessage(9, points_.get(i));
      }
      for (int i = 0; i < polyline_.size(); i++) {
        output.writeMessage(10, polyline_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, box_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, cylinder_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, plane_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, sphere_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, image_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, heightmap_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, mesh_);
      }
      for (int i = 0; i < points_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, points_.get(i));
      }
      for (int i = 0; i < polyline_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, polyline_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gazebo.msgs.Geometry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:gazebo.msgs.Geometry)
        cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.GeometryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.internal_static_gazebo_msgs_Geometry_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.internal_static_gazebo_msgs_Geometry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry.class, cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry.Builder.class);
      }

      // Construct using cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBoxFieldBuilder();
          getCylinderFieldBuilder();
          getPlaneFieldBuilder();
          getSphereFieldBuilder();
          getImageFieldBuilder();
          getHeightmapFieldBuilder();
          getMeshFieldBuilder();
          getPointsFieldBuilder();
          getPolylineFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry.Type.BOX;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (boxBuilder_ == null) {
          box_ = cn.autolabor.plugin.gazebo.msgs.ProtoBoxgeom.BoxGeom.getDefaultInstance();
        } else {
          boxBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (cylinderBuilder_ == null) {
          cylinder_ = cn.autolabor.plugin.gazebo.msgs.ProtoCylindergeom.CylinderGeom.getDefaultInstance();
        } else {
          cylinderBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (planeBuilder_ == null) {
          plane_ = cn.autolabor.plugin.gazebo.msgs.ProtoPlanegeom.PlaneGeom.getDefaultInstance();
        } else {
          planeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (sphereBuilder_ == null) {
          sphere_ = cn.autolabor.plugin.gazebo.msgs.ProtoSpheregeom.SphereGeom.getDefaultInstance();
        } else {
          sphereBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (imageBuilder_ == null) {
          image_ = cn.autolabor.plugin.gazebo.msgs.ProtoImagegeom.ImageGeom.getDefaultInstance();
        } else {
          imageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (heightmapBuilder_ == null) {
          heightmap_ = cn.autolabor.plugin.gazebo.msgs.ProtoHeightmapgeom.HeightmapGeom.getDefaultInstance();
        } else {
          heightmapBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (meshBuilder_ == null) {
          mesh_ = cn.autolabor.plugin.gazebo.msgs.ProtoMeshgeom.MeshGeom.getDefaultInstance();
        } else {
          meshBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (pointsBuilder_ == null) {
          points_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          pointsBuilder_.clear();
        }
        if (polylineBuilder_ == null) {
          polyline_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          polylineBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.internal_static_gazebo_msgs_Geometry_descriptor;
      }

      public cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry getDefaultInstanceForType() {
        return cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry.getDefaultInstance();
      }

      public cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry build() {
        cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry buildPartial() {
        cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry result = new cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (boxBuilder_ == null) {
          result.box_ = box_;
        } else {
          result.box_ = boxBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (cylinderBuilder_ == null) {
          result.cylinder_ = cylinder_;
        } else {
          result.cylinder_ = cylinderBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (planeBuilder_ == null) {
          result.plane_ = plane_;
        } else {
          result.plane_ = planeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (sphereBuilder_ == null) {
          result.sphere_ = sphere_;
        } else {
          result.sphere_ = sphereBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (imageBuilder_ == null) {
          result.image_ = image_;
        } else {
          result.image_ = imageBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (heightmapBuilder_ == null) {
          result.heightmap_ = heightmap_;
        } else {
          result.heightmap_ = heightmapBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (meshBuilder_ == null) {
          result.mesh_ = mesh_;
        } else {
          result.mesh_ = meshBuilder_.build();
        }
        if (pointsBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            points_ = java.util.Collections.unmodifiableList(points_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.points_ = points_;
        } else {
          result.points_ = pointsBuilder_.build();
        }
        if (polylineBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            polyline_ = java.util.Collections.unmodifiableList(polyline_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.polyline_ = polyline_;
        } else {
          result.polyline_ = polylineBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry) {
          return mergeFrom((cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry other) {
        if (other == cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasBox()) {
          mergeBox(other.getBox());
        }
        if (other.hasCylinder()) {
          mergeCylinder(other.getCylinder());
        }
        if (other.hasPlane()) {
          mergePlane(other.getPlane());
        }
        if (other.hasSphere()) {
          mergeSphere(other.getSphere());
        }
        if (other.hasImage()) {
          mergeImage(other.getImage());
        }
        if (other.hasHeightmap()) {
          mergeHeightmap(other.getHeightmap());
        }
        if (other.hasMesh()) {
          mergeMesh(other.getMesh());
        }
        if (pointsBuilder_ == null) {
          if (!other.points_.isEmpty()) {
            if (points_.isEmpty()) {
              points_ = other.points_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensurePointsIsMutable();
              points_.addAll(other.points_);
            }
            onChanged();
          }
        } else {
          if (!other.points_.isEmpty()) {
            if (pointsBuilder_.isEmpty()) {
              pointsBuilder_.dispose();
              pointsBuilder_ = null;
              points_ = other.points_;
              bitField0_ = (bitField0_ & ~0x00000100);
              pointsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPointsFieldBuilder() : null;
            } else {
              pointsBuilder_.addAllMessages(other.points_);
            }
          }
        }
        if (polylineBuilder_ == null) {
          if (!other.polyline_.isEmpty()) {
            if (polyline_.isEmpty()) {
              polyline_ = other.polyline_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensurePolylineIsMutable();
              polyline_.addAll(other.polyline_);
            }
            onChanged();
          }
        } else {
          if (!other.polyline_.isEmpty()) {
            if (polylineBuilder_.isEmpty()) {
              polylineBuilder_.dispose();
              polylineBuilder_ = null;
              polyline_ = other.polyline_;
              bitField0_ = (bitField0_ & ~0x00000200);
              polylineBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPolylineFieldBuilder() : null;
            } else {
              polylineBuilder_.addAllMessages(other.polyline_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasBox()) {
          if (!getBox().isInitialized()) {
            
            return false;
          }
        }
        if (hasCylinder()) {
          if (!getCylinder().isInitialized()) {
            
            return false;
          }
        }
        if (hasPlane()) {
          if (!getPlane().isInitialized()) {
            
            return false;
          }
        }
        if (hasSphere()) {
          if (!getSphere().isInitialized()) {
            
            return false;
          }
        }
        if (hasImage()) {
          if (!getImage().isInitialized()) {
            
            return false;
          }
        }
        if (hasHeightmap()) {
          if (!getHeightmap().isInitialized()) {
            
            return false;
          }
        }
        if (hasMesh()) {
          if (!getMesh().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getPointsCount(); i++) {
          if (!getPoints(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getPolylineCount(); i++) {
          if (!getPolyline(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry.Type type_ = cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry.Type.BOX;
      /**
       * <code>optional .gazebo.msgs.Geometry.Type type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .gazebo.msgs.Geometry.Type type = 1;</code>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry.Type getType() {
        return type_;
      }
      /**
       * <code>optional .gazebo.msgs.Geometry.Type type = 1;</code>
       */
      public Builder setType(cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.Geometry.Type type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = cn.autolabor.plugin.gazebo.msgs.ProtoGeometry.Geometry.Type.BOX;
        onChanged();
        return this;
      }

      private cn.autolabor.plugin.gazebo.msgs.ProtoBoxgeom.BoxGeom box_ = cn.autolabor.plugin.gazebo.msgs.ProtoBoxgeom.BoxGeom.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cn.autolabor.plugin.gazebo.msgs.ProtoBoxgeom.BoxGeom, cn.autolabor.plugin.gazebo.msgs.ProtoBoxgeom.BoxGeom.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoBoxgeom.BoxGeomOrBuilder> boxBuilder_;
      /**
       * <code>optional .gazebo.msgs.BoxGeom box = 2;</code>
       */
      public boolean hasBox() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .gazebo.msgs.BoxGeom box = 2;</code>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoBoxgeom.BoxGeom getBox() {
        if (boxBuilder_ == null) {
          return box_;
        } else {
          return boxBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gazebo.msgs.BoxGeom box = 2;</code>
       */
      public Builder setBox(cn.autolabor.plugin.gazebo.msgs.ProtoBoxgeom.BoxGeom value) {
        if (boxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          box_ = value;
          onChanged();
        } else {
          boxBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.BoxGeom box = 2;</code>
       */
      public Builder setBox(
          cn.autolabor.plugin.gazebo.msgs.ProtoBoxgeom.BoxGeom.Builder builderForValue) {
        if (boxBuilder_ == null) {
          box_ = builderForValue.build();
          onChanged();
        } else {
          boxBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.BoxGeom box = 2;</code>
       */
      public Builder mergeBox(cn.autolabor.plugin.gazebo.msgs.ProtoBoxgeom.BoxGeom value) {
        if (boxBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              box_ != cn.autolabor.plugin.gazebo.msgs.ProtoBoxgeom.BoxGeom.getDefaultInstance()) {
            box_ =
              cn.autolabor.plugin.gazebo.msgs.ProtoBoxgeom.BoxGeom.newBuilder(box_).mergeFrom(value).buildPartial();
          } else {
            box_ = value;
          }
          onChanged();
        } else {
          boxBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.BoxGeom box = 2;</code>
       */
      public Builder clearBox() {
        if (boxBuilder_ == null) {
          box_ = cn.autolabor.plugin.gazebo.msgs.ProtoBoxgeom.BoxGeom.getDefaultInstance();
          onChanged();
        } else {
          boxBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.BoxGeom box = 2;</code>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoBoxgeom.BoxGeom.Builder getBoxBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getBoxFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gazebo.msgs.BoxGeom box = 2;</code>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoBoxgeom.BoxGeomOrBuilder getBoxOrBuilder() {
        if (boxBuilder_ != null) {
          return boxBuilder_.getMessageOrBuilder();
        } else {
          return box_;
        }
      }
      /**
       * <code>optional .gazebo.msgs.BoxGeom box = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cn.autolabor.plugin.gazebo.msgs.ProtoBoxgeom.BoxGeom, cn.autolabor.plugin.gazebo.msgs.ProtoBoxgeom.BoxGeom.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoBoxgeom.BoxGeomOrBuilder> 
          getBoxFieldBuilder() {
        if (boxBuilder_ == null) {
          boxBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cn.autolabor.plugin.gazebo.msgs.ProtoBoxgeom.BoxGeom, cn.autolabor.plugin.gazebo.msgs.ProtoBoxgeom.BoxGeom.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoBoxgeom.BoxGeomOrBuilder>(
                  getBox(),
                  getParentForChildren(),
                  isClean());
          box_ = null;
        }
        return boxBuilder_;
      }

      private cn.autolabor.plugin.gazebo.msgs.ProtoCylindergeom.CylinderGeom cylinder_ = cn.autolabor.plugin.gazebo.msgs.ProtoCylindergeom.CylinderGeom.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cn.autolabor.plugin.gazebo.msgs.ProtoCylindergeom.CylinderGeom, cn.autolabor.plugin.gazebo.msgs.ProtoCylindergeom.CylinderGeom.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoCylindergeom.CylinderGeomOrBuilder> cylinderBuilder_;
      /**
       * <code>optional .gazebo.msgs.CylinderGeom cylinder = 3;</code>
       */
      public boolean hasCylinder() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .gazebo.msgs.CylinderGeom cylinder = 3;</code>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoCylindergeom.CylinderGeom getCylinder() {
        if (cylinderBuilder_ == null) {
          return cylinder_;
        } else {
          return cylinderBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gazebo.msgs.CylinderGeom cylinder = 3;</code>
       */
      public Builder setCylinder(cn.autolabor.plugin.gazebo.msgs.ProtoCylindergeom.CylinderGeom value) {
        if (cylinderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cylinder_ = value;
          onChanged();
        } else {
          cylinderBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.CylinderGeom cylinder = 3;</code>
       */
      public Builder setCylinder(
          cn.autolabor.plugin.gazebo.msgs.ProtoCylindergeom.CylinderGeom.Builder builderForValue) {
        if (cylinderBuilder_ == null) {
          cylinder_ = builderForValue.build();
          onChanged();
        } else {
          cylinderBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.CylinderGeom cylinder = 3;</code>
       */
      public Builder mergeCylinder(cn.autolabor.plugin.gazebo.msgs.ProtoCylindergeom.CylinderGeom value) {
        if (cylinderBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              cylinder_ != cn.autolabor.plugin.gazebo.msgs.ProtoCylindergeom.CylinderGeom.getDefaultInstance()) {
            cylinder_ =
              cn.autolabor.plugin.gazebo.msgs.ProtoCylindergeom.CylinderGeom.newBuilder(cylinder_).mergeFrom(value).buildPartial();
          } else {
            cylinder_ = value;
          }
          onChanged();
        } else {
          cylinderBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.CylinderGeom cylinder = 3;</code>
       */
      public Builder clearCylinder() {
        if (cylinderBuilder_ == null) {
          cylinder_ = cn.autolabor.plugin.gazebo.msgs.ProtoCylindergeom.CylinderGeom.getDefaultInstance();
          onChanged();
        } else {
          cylinderBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.CylinderGeom cylinder = 3;</code>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoCylindergeom.CylinderGeom.Builder getCylinderBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getCylinderFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gazebo.msgs.CylinderGeom cylinder = 3;</code>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoCylindergeom.CylinderGeomOrBuilder getCylinderOrBuilder() {
        if (cylinderBuilder_ != null) {
          return cylinderBuilder_.getMessageOrBuilder();
        } else {
          return cylinder_;
        }
      }
      /**
       * <code>optional .gazebo.msgs.CylinderGeom cylinder = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cn.autolabor.plugin.gazebo.msgs.ProtoCylindergeom.CylinderGeom, cn.autolabor.plugin.gazebo.msgs.ProtoCylindergeom.CylinderGeom.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoCylindergeom.CylinderGeomOrBuilder> 
          getCylinderFieldBuilder() {
        if (cylinderBuilder_ == null) {
          cylinderBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cn.autolabor.plugin.gazebo.msgs.ProtoCylindergeom.CylinderGeom, cn.autolabor.plugin.gazebo.msgs.ProtoCylindergeom.CylinderGeom.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoCylindergeom.CylinderGeomOrBuilder>(
                  getCylinder(),
                  getParentForChildren(),
                  isClean());
          cylinder_ = null;
        }
        return cylinderBuilder_;
      }

      private cn.autolabor.plugin.gazebo.msgs.ProtoPlanegeom.PlaneGeom plane_ = cn.autolabor.plugin.gazebo.msgs.ProtoPlanegeom.PlaneGeom.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cn.autolabor.plugin.gazebo.msgs.ProtoPlanegeom.PlaneGeom, cn.autolabor.plugin.gazebo.msgs.ProtoPlanegeom.PlaneGeom.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoPlanegeom.PlaneGeomOrBuilder> planeBuilder_;
      /**
       * <code>optional .gazebo.msgs.PlaneGeom plane = 4;</code>
       */
      public boolean hasPlane() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .gazebo.msgs.PlaneGeom plane = 4;</code>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoPlanegeom.PlaneGeom getPlane() {
        if (planeBuilder_ == null) {
          return plane_;
        } else {
          return planeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gazebo.msgs.PlaneGeom plane = 4;</code>
       */
      public Builder setPlane(cn.autolabor.plugin.gazebo.msgs.ProtoPlanegeom.PlaneGeom value) {
        if (planeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          plane_ = value;
          onChanged();
        } else {
          planeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.PlaneGeom plane = 4;</code>
       */
      public Builder setPlane(
          cn.autolabor.plugin.gazebo.msgs.ProtoPlanegeom.PlaneGeom.Builder builderForValue) {
        if (planeBuilder_ == null) {
          plane_ = builderForValue.build();
          onChanged();
        } else {
          planeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.PlaneGeom plane = 4;</code>
       */
      public Builder mergePlane(cn.autolabor.plugin.gazebo.msgs.ProtoPlanegeom.PlaneGeom value) {
        if (planeBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              plane_ != cn.autolabor.plugin.gazebo.msgs.ProtoPlanegeom.PlaneGeom.getDefaultInstance()) {
            plane_ =
              cn.autolabor.plugin.gazebo.msgs.ProtoPlanegeom.PlaneGeom.newBuilder(plane_).mergeFrom(value).buildPartial();
          } else {
            plane_ = value;
          }
          onChanged();
        } else {
          planeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.PlaneGeom plane = 4;</code>
       */
      public Builder clearPlane() {
        if (planeBuilder_ == null) {
          plane_ = cn.autolabor.plugin.gazebo.msgs.ProtoPlanegeom.PlaneGeom.getDefaultInstance();
          onChanged();
        } else {
          planeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.PlaneGeom plane = 4;</code>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoPlanegeom.PlaneGeom.Builder getPlaneBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getPlaneFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gazebo.msgs.PlaneGeom plane = 4;</code>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoPlanegeom.PlaneGeomOrBuilder getPlaneOrBuilder() {
        if (planeBuilder_ != null) {
          return planeBuilder_.getMessageOrBuilder();
        } else {
          return plane_;
        }
      }
      /**
       * <code>optional .gazebo.msgs.PlaneGeom plane = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cn.autolabor.plugin.gazebo.msgs.ProtoPlanegeom.PlaneGeom, cn.autolabor.plugin.gazebo.msgs.ProtoPlanegeom.PlaneGeom.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoPlanegeom.PlaneGeomOrBuilder> 
          getPlaneFieldBuilder() {
        if (planeBuilder_ == null) {
          planeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cn.autolabor.plugin.gazebo.msgs.ProtoPlanegeom.PlaneGeom, cn.autolabor.plugin.gazebo.msgs.ProtoPlanegeom.PlaneGeom.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoPlanegeom.PlaneGeomOrBuilder>(
                  getPlane(),
                  getParentForChildren(),
                  isClean());
          plane_ = null;
        }
        return planeBuilder_;
      }

      private cn.autolabor.plugin.gazebo.msgs.ProtoSpheregeom.SphereGeom sphere_ = cn.autolabor.plugin.gazebo.msgs.ProtoSpheregeom.SphereGeom.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cn.autolabor.plugin.gazebo.msgs.ProtoSpheregeom.SphereGeom, cn.autolabor.plugin.gazebo.msgs.ProtoSpheregeom.SphereGeom.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoSpheregeom.SphereGeomOrBuilder> sphereBuilder_;
      /**
       * <code>optional .gazebo.msgs.SphereGeom sphere = 5;</code>
       */
      public boolean hasSphere() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .gazebo.msgs.SphereGeom sphere = 5;</code>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoSpheregeom.SphereGeom getSphere() {
        if (sphereBuilder_ == null) {
          return sphere_;
        } else {
          return sphereBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gazebo.msgs.SphereGeom sphere = 5;</code>
       */
      public Builder setSphere(cn.autolabor.plugin.gazebo.msgs.ProtoSpheregeom.SphereGeom value) {
        if (sphereBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sphere_ = value;
          onChanged();
        } else {
          sphereBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.SphereGeom sphere = 5;</code>
       */
      public Builder setSphere(
          cn.autolabor.plugin.gazebo.msgs.ProtoSpheregeom.SphereGeom.Builder builderForValue) {
        if (sphereBuilder_ == null) {
          sphere_ = builderForValue.build();
          onChanged();
        } else {
          sphereBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.SphereGeom sphere = 5;</code>
       */
      public Builder mergeSphere(cn.autolabor.plugin.gazebo.msgs.ProtoSpheregeom.SphereGeom value) {
        if (sphereBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              sphere_ != cn.autolabor.plugin.gazebo.msgs.ProtoSpheregeom.SphereGeom.getDefaultInstance()) {
            sphere_ =
              cn.autolabor.plugin.gazebo.msgs.ProtoSpheregeom.SphereGeom.newBuilder(sphere_).mergeFrom(value).buildPartial();
          } else {
            sphere_ = value;
          }
          onChanged();
        } else {
          sphereBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.SphereGeom sphere = 5;</code>
       */
      public Builder clearSphere() {
        if (sphereBuilder_ == null) {
          sphere_ = cn.autolabor.plugin.gazebo.msgs.ProtoSpheregeom.SphereGeom.getDefaultInstance();
          onChanged();
        } else {
          sphereBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.SphereGeom sphere = 5;</code>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoSpheregeom.SphereGeom.Builder getSphereBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getSphereFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gazebo.msgs.SphereGeom sphere = 5;</code>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoSpheregeom.SphereGeomOrBuilder getSphereOrBuilder() {
        if (sphereBuilder_ != null) {
          return sphereBuilder_.getMessageOrBuilder();
        } else {
          return sphere_;
        }
      }
      /**
       * <code>optional .gazebo.msgs.SphereGeom sphere = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cn.autolabor.plugin.gazebo.msgs.ProtoSpheregeom.SphereGeom, cn.autolabor.plugin.gazebo.msgs.ProtoSpheregeom.SphereGeom.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoSpheregeom.SphereGeomOrBuilder> 
          getSphereFieldBuilder() {
        if (sphereBuilder_ == null) {
          sphereBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cn.autolabor.plugin.gazebo.msgs.ProtoSpheregeom.SphereGeom, cn.autolabor.plugin.gazebo.msgs.ProtoSpheregeom.SphereGeom.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoSpheregeom.SphereGeomOrBuilder>(
                  getSphere(),
                  getParentForChildren(),
                  isClean());
          sphere_ = null;
        }
        return sphereBuilder_;
      }

      private cn.autolabor.plugin.gazebo.msgs.ProtoImagegeom.ImageGeom image_ = cn.autolabor.plugin.gazebo.msgs.ProtoImagegeom.ImageGeom.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cn.autolabor.plugin.gazebo.msgs.ProtoImagegeom.ImageGeom, cn.autolabor.plugin.gazebo.msgs.ProtoImagegeom.ImageGeom.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoImagegeom.ImageGeomOrBuilder> imageBuilder_;
      /**
       * <code>optional .gazebo.msgs.ImageGeom image = 6;</code>
       */
      public boolean hasImage() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .gazebo.msgs.ImageGeom image = 6;</code>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoImagegeom.ImageGeom getImage() {
        if (imageBuilder_ == null) {
          return image_;
        } else {
          return imageBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gazebo.msgs.ImageGeom image = 6;</code>
       */
      public Builder setImage(cn.autolabor.plugin.gazebo.msgs.ProtoImagegeom.ImageGeom value) {
        if (imageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          image_ = value;
          onChanged();
        } else {
          imageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.ImageGeom image = 6;</code>
       */
      public Builder setImage(
          cn.autolabor.plugin.gazebo.msgs.ProtoImagegeom.ImageGeom.Builder builderForValue) {
        if (imageBuilder_ == null) {
          image_ = builderForValue.build();
          onChanged();
        } else {
          imageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.ImageGeom image = 6;</code>
       */
      public Builder mergeImage(cn.autolabor.plugin.gazebo.msgs.ProtoImagegeom.ImageGeom value) {
        if (imageBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              image_ != cn.autolabor.plugin.gazebo.msgs.ProtoImagegeom.ImageGeom.getDefaultInstance()) {
            image_ =
              cn.autolabor.plugin.gazebo.msgs.ProtoImagegeom.ImageGeom.newBuilder(image_).mergeFrom(value).buildPartial();
          } else {
            image_ = value;
          }
          onChanged();
        } else {
          imageBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.ImageGeom image = 6;</code>
       */
      public Builder clearImage() {
        if (imageBuilder_ == null) {
          image_ = cn.autolabor.plugin.gazebo.msgs.ProtoImagegeom.ImageGeom.getDefaultInstance();
          onChanged();
        } else {
          imageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.ImageGeom image = 6;</code>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoImagegeom.ImageGeom.Builder getImageBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getImageFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gazebo.msgs.ImageGeom image = 6;</code>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoImagegeom.ImageGeomOrBuilder getImageOrBuilder() {
        if (imageBuilder_ != null) {
          return imageBuilder_.getMessageOrBuilder();
        } else {
          return image_;
        }
      }
      /**
       * <code>optional .gazebo.msgs.ImageGeom image = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cn.autolabor.plugin.gazebo.msgs.ProtoImagegeom.ImageGeom, cn.autolabor.plugin.gazebo.msgs.ProtoImagegeom.ImageGeom.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoImagegeom.ImageGeomOrBuilder> 
          getImageFieldBuilder() {
        if (imageBuilder_ == null) {
          imageBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cn.autolabor.plugin.gazebo.msgs.ProtoImagegeom.ImageGeom, cn.autolabor.plugin.gazebo.msgs.ProtoImagegeom.ImageGeom.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoImagegeom.ImageGeomOrBuilder>(
                  getImage(),
                  getParentForChildren(),
                  isClean());
          image_ = null;
        }
        return imageBuilder_;
      }

      private cn.autolabor.plugin.gazebo.msgs.ProtoHeightmapgeom.HeightmapGeom heightmap_ = cn.autolabor.plugin.gazebo.msgs.ProtoHeightmapgeom.HeightmapGeom.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cn.autolabor.plugin.gazebo.msgs.ProtoHeightmapgeom.HeightmapGeom, cn.autolabor.plugin.gazebo.msgs.ProtoHeightmapgeom.HeightmapGeom.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoHeightmapgeom.HeightmapGeomOrBuilder> heightmapBuilder_;
      /**
       * <code>optional .gazebo.msgs.HeightmapGeom heightmap = 7;</code>
       */
      public boolean hasHeightmap() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .gazebo.msgs.HeightmapGeom heightmap = 7;</code>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoHeightmapgeom.HeightmapGeom getHeightmap() {
        if (heightmapBuilder_ == null) {
          return heightmap_;
        } else {
          return heightmapBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gazebo.msgs.HeightmapGeom heightmap = 7;</code>
       */
      public Builder setHeightmap(cn.autolabor.plugin.gazebo.msgs.ProtoHeightmapgeom.HeightmapGeom value) {
        if (heightmapBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          heightmap_ = value;
          onChanged();
        } else {
          heightmapBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.HeightmapGeom heightmap = 7;</code>
       */
      public Builder setHeightmap(
          cn.autolabor.plugin.gazebo.msgs.ProtoHeightmapgeom.HeightmapGeom.Builder builderForValue) {
        if (heightmapBuilder_ == null) {
          heightmap_ = builderForValue.build();
          onChanged();
        } else {
          heightmapBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.HeightmapGeom heightmap = 7;</code>
       */
      public Builder mergeHeightmap(cn.autolabor.plugin.gazebo.msgs.ProtoHeightmapgeom.HeightmapGeom value) {
        if (heightmapBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              heightmap_ != cn.autolabor.plugin.gazebo.msgs.ProtoHeightmapgeom.HeightmapGeom.getDefaultInstance()) {
            heightmap_ =
              cn.autolabor.plugin.gazebo.msgs.ProtoHeightmapgeom.HeightmapGeom.newBuilder(heightmap_).mergeFrom(value).buildPartial();
          } else {
            heightmap_ = value;
          }
          onChanged();
        } else {
          heightmapBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.HeightmapGeom heightmap = 7;</code>
       */
      public Builder clearHeightmap() {
        if (heightmapBuilder_ == null) {
          heightmap_ = cn.autolabor.plugin.gazebo.msgs.ProtoHeightmapgeom.HeightmapGeom.getDefaultInstance();
          onChanged();
        } else {
          heightmapBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.HeightmapGeom heightmap = 7;</code>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoHeightmapgeom.HeightmapGeom.Builder getHeightmapBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getHeightmapFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gazebo.msgs.HeightmapGeom heightmap = 7;</code>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoHeightmapgeom.HeightmapGeomOrBuilder getHeightmapOrBuilder() {
        if (heightmapBuilder_ != null) {
          return heightmapBuilder_.getMessageOrBuilder();
        } else {
          return heightmap_;
        }
      }
      /**
       * <code>optional .gazebo.msgs.HeightmapGeom heightmap = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cn.autolabor.plugin.gazebo.msgs.ProtoHeightmapgeom.HeightmapGeom, cn.autolabor.plugin.gazebo.msgs.ProtoHeightmapgeom.HeightmapGeom.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoHeightmapgeom.HeightmapGeomOrBuilder> 
          getHeightmapFieldBuilder() {
        if (heightmapBuilder_ == null) {
          heightmapBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cn.autolabor.plugin.gazebo.msgs.ProtoHeightmapgeom.HeightmapGeom, cn.autolabor.plugin.gazebo.msgs.ProtoHeightmapgeom.HeightmapGeom.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoHeightmapgeom.HeightmapGeomOrBuilder>(
                  getHeightmap(),
                  getParentForChildren(),
                  isClean());
          heightmap_ = null;
        }
        return heightmapBuilder_;
      }

      private cn.autolabor.plugin.gazebo.msgs.ProtoMeshgeom.MeshGeom mesh_ = cn.autolabor.plugin.gazebo.msgs.ProtoMeshgeom.MeshGeom.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cn.autolabor.plugin.gazebo.msgs.ProtoMeshgeom.MeshGeom, cn.autolabor.plugin.gazebo.msgs.ProtoMeshgeom.MeshGeom.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoMeshgeom.MeshGeomOrBuilder> meshBuilder_;
      /**
       * <code>optional .gazebo.msgs.MeshGeom mesh = 8;</code>
       */
      public boolean hasMesh() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .gazebo.msgs.MeshGeom mesh = 8;</code>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoMeshgeom.MeshGeom getMesh() {
        if (meshBuilder_ == null) {
          return mesh_;
        } else {
          return meshBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gazebo.msgs.MeshGeom mesh = 8;</code>
       */
      public Builder setMesh(cn.autolabor.plugin.gazebo.msgs.ProtoMeshgeom.MeshGeom value) {
        if (meshBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mesh_ = value;
          onChanged();
        } else {
          meshBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.MeshGeom mesh = 8;</code>
       */
      public Builder setMesh(
          cn.autolabor.plugin.gazebo.msgs.ProtoMeshgeom.MeshGeom.Builder builderForValue) {
        if (meshBuilder_ == null) {
          mesh_ = builderForValue.build();
          onChanged();
        } else {
          meshBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.MeshGeom mesh = 8;</code>
       */
      public Builder mergeMesh(cn.autolabor.plugin.gazebo.msgs.ProtoMeshgeom.MeshGeom value) {
        if (meshBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              mesh_ != cn.autolabor.plugin.gazebo.msgs.ProtoMeshgeom.MeshGeom.getDefaultInstance()) {
            mesh_ =
              cn.autolabor.plugin.gazebo.msgs.ProtoMeshgeom.MeshGeom.newBuilder(mesh_).mergeFrom(value).buildPartial();
          } else {
            mesh_ = value;
          }
          onChanged();
        } else {
          meshBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.MeshGeom mesh = 8;</code>
       */
      public Builder clearMesh() {
        if (meshBuilder_ == null) {
          mesh_ = cn.autolabor.plugin.gazebo.msgs.ProtoMeshgeom.MeshGeom.getDefaultInstance();
          onChanged();
        } else {
          meshBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.MeshGeom mesh = 8;</code>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoMeshgeom.MeshGeom.Builder getMeshBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getMeshFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gazebo.msgs.MeshGeom mesh = 8;</code>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoMeshgeom.MeshGeomOrBuilder getMeshOrBuilder() {
        if (meshBuilder_ != null) {
          return meshBuilder_.getMessageOrBuilder();
        } else {
          return mesh_;
        }
      }
      /**
       * <code>optional .gazebo.msgs.MeshGeom mesh = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cn.autolabor.plugin.gazebo.msgs.ProtoMeshgeom.MeshGeom, cn.autolabor.plugin.gazebo.msgs.ProtoMeshgeom.MeshGeom.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoMeshgeom.MeshGeomOrBuilder> 
          getMeshFieldBuilder() {
        if (meshBuilder_ == null) {
          meshBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cn.autolabor.plugin.gazebo.msgs.ProtoMeshgeom.MeshGeom, cn.autolabor.plugin.gazebo.msgs.ProtoMeshgeom.MeshGeom.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoMeshgeom.MeshGeomOrBuilder>(
                  getMesh(),
                  getParentForChildren(),
                  isClean());
          mesh_ = null;
        }
        return meshBuilder_;
      }

      private java.util.List<cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d> points_ =
        java.util.Collections.emptyList();
      private void ensurePointsIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          points_ = new java.util.ArrayList<cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d>(points_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d, cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3dOrBuilder> pointsBuilder_;

      /**
       * <code>repeated .gazebo.msgs.Vector3d points = 9;</code>
       */
      public java.util.List<cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d> getPointsList() {
        if (pointsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(points_);
        } else {
          return pointsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .gazebo.msgs.Vector3d points = 9;</code>
       */
      public int getPointsCount() {
        if (pointsBuilder_ == null) {
          return points_.size();
        } else {
          return pointsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .gazebo.msgs.Vector3d points = 9;</code>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d getPoints(int index) {
        if (pointsBuilder_ == null) {
          return points_.get(index);
        } else {
          return pointsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .gazebo.msgs.Vector3d points = 9;</code>
       */
      public Builder setPoints(
          int index, cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d value) {
        if (pointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointsIsMutable();
          points_.set(index, value);
          onChanged();
        } else {
          pointsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Vector3d points = 9;</code>
       */
      public Builder setPoints(
          int index, cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d.Builder builderForValue) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.set(index, builderForValue.build());
          onChanged();
        } else {
          pointsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Vector3d points = 9;</code>
       */
      public Builder addPoints(cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d value) {
        if (pointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointsIsMutable();
          points_.add(value);
          onChanged();
        } else {
          pointsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Vector3d points = 9;</code>
       */
      public Builder addPoints(
          int index, cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d value) {
        if (pointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointsIsMutable();
          points_.add(index, value);
          onChanged();
        } else {
          pointsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Vector3d points = 9;</code>
       */
      public Builder addPoints(
          cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d.Builder builderForValue) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.add(builderForValue.build());
          onChanged();
        } else {
          pointsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Vector3d points = 9;</code>
       */
      public Builder addPoints(
          int index, cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d.Builder builderForValue) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.add(index, builderForValue.build());
          onChanged();
        } else {
          pointsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Vector3d points = 9;</code>
       */
      public Builder addAllPoints(
          java.lang.Iterable<? extends cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d> values) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, points_);
          onChanged();
        } else {
          pointsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Vector3d points = 9;</code>
       */
      public Builder clearPoints() {
        if (pointsBuilder_ == null) {
          points_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          pointsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Vector3d points = 9;</code>
       */
      public Builder removePoints(int index) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.remove(index);
          onChanged();
        } else {
          pointsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Vector3d points = 9;</code>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d.Builder getPointsBuilder(
          int index) {
        return getPointsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .gazebo.msgs.Vector3d points = 9;</code>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3dOrBuilder getPointsOrBuilder(
          int index) {
        if (pointsBuilder_ == null) {
          return points_.get(index);  } else {
          return pointsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .gazebo.msgs.Vector3d points = 9;</code>
       */
      public java.util.List<? extends cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3dOrBuilder> 
           getPointsOrBuilderList() {
        if (pointsBuilder_ != null) {
          return pointsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(points_);
        }
      }
      /**
       * <code>repeated .gazebo.msgs.Vector3d points = 9;</code>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d.Builder addPointsBuilder() {
        return getPointsFieldBuilder().addBuilder(
            cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d.getDefaultInstance());
      }
      /**
       * <code>repeated .gazebo.msgs.Vector3d points = 9;</code>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d.Builder addPointsBuilder(
          int index) {
        return getPointsFieldBuilder().addBuilder(
            index, cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d.getDefaultInstance());
      }
      /**
       * <code>repeated .gazebo.msgs.Vector3d points = 9;</code>
       */
      public java.util.List<cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d.Builder> 
           getPointsBuilderList() {
        return getPointsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d, cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3dOrBuilder> 
          getPointsFieldBuilder() {
        if (pointsBuilder_ == null) {
          pointsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d, cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3d.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.Vector3dOrBuilder>(
                  points_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          points_ = null;
        }
        return pointsBuilder_;
      }

      private java.util.List<cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.Polyline> polyline_ =
        java.util.Collections.emptyList();
      private void ensurePolylineIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          polyline_ = new java.util.ArrayList<cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.Polyline>(polyline_);
          bitField0_ |= 0x00000200;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.Polyline, cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.Polyline.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.PolylineOrBuilder> polylineBuilder_;

      /**
       * <code>repeated .gazebo.msgs.Polyline polyline = 10;</code>
       */
      public java.util.List<cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.Polyline> getPolylineList() {
        if (polylineBuilder_ == null) {
          return java.util.Collections.unmodifiableList(polyline_);
        } else {
          return polylineBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .gazebo.msgs.Polyline polyline = 10;</code>
       */
      public int getPolylineCount() {
        if (polylineBuilder_ == null) {
          return polyline_.size();
        } else {
          return polylineBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .gazebo.msgs.Polyline polyline = 10;</code>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.Polyline getPolyline(int index) {
        if (polylineBuilder_ == null) {
          return polyline_.get(index);
        } else {
          return polylineBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .gazebo.msgs.Polyline polyline = 10;</code>
       */
      public Builder setPolyline(
          int index, cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.Polyline value) {
        if (polylineBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePolylineIsMutable();
          polyline_.set(index, value);
          onChanged();
        } else {
          polylineBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Polyline polyline = 10;</code>
       */
      public Builder setPolyline(
          int index, cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.Polyline.Builder builderForValue) {
        if (polylineBuilder_ == null) {
          ensurePolylineIsMutable();
          polyline_.set(index, builderForValue.build());
          onChanged();
        } else {
          polylineBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Polyline polyline = 10;</code>
       */
      public Builder addPolyline(cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.Polyline value) {
        if (polylineBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePolylineIsMutable();
          polyline_.add(value);
          onChanged();
        } else {
          polylineBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Polyline polyline = 10;</code>
       */
      public Builder addPolyline(
          int index, cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.Polyline value) {
        if (polylineBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePolylineIsMutable();
          polyline_.add(index, value);
          onChanged();
        } else {
          polylineBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Polyline polyline = 10;</code>
       */
      public Builder addPolyline(
          cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.Polyline.Builder builderForValue) {
        if (polylineBuilder_ == null) {
          ensurePolylineIsMutable();
          polyline_.add(builderForValue.build());
          onChanged();
        } else {
          polylineBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Polyline polyline = 10;</code>
       */
      public Builder addPolyline(
          int index, cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.Polyline.Builder builderForValue) {
        if (polylineBuilder_ == null) {
          ensurePolylineIsMutable();
          polyline_.add(index, builderForValue.build());
          onChanged();
        } else {
          polylineBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Polyline polyline = 10;</code>
       */
      public Builder addAllPolyline(
          java.lang.Iterable<? extends cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.Polyline> values) {
        if (polylineBuilder_ == null) {
          ensurePolylineIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, polyline_);
          onChanged();
        } else {
          polylineBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Polyline polyline = 10;</code>
       */
      public Builder clearPolyline() {
        if (polylineBuilder_ == null) {
          polyline_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          polylineBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Polyline polyline = 10;</code>
       */
      public Builder removePolyline(int index) {
        if (polylineBuilder_ == null) {
          ensurePolylineIsMutable();
          polyline_.remove(index);
          onChanged();
        } else {
          polylineBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Polyline polyline = 10;</code>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.Polyline.Builder getPolylineBuilder(
          int index) {
        return getPolylineFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .gazebo.msgs.Polyline polyline = 10;</code>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.PolylineOrBuilder getPolylineOrBuilder(
          int index) {
        if (polylineBuilder_ == null) {
          return polyline_.get(index);  } else {
          return polylineBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .gazebo.msgs.Polyline polyline = 10;</code>
       */
      public java.util.List<? extends cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.PolylineOrBuilder> 
           getPolylineOrBuilderList() {
        if (polylineBuilder_ != null) {
          return polylineBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(polyline_);
        }
      }
      /**
       * <code>repeated .gazebo.msgs.Polyline polyline = 10;</code>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.Polyline.Builder addPolylineBuilder() {
        return getPolylineFieldBuilder().addBuilder(
            cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.Polyline.getDefaultInstance());
      }
      /**
       * <code>repeated .gazebo.msgs.Polyline polyline = 10;</code>
       */
      public cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.Polyline.Builder addPolylineBuilder(
          int index) {
        return getPolylineFieldBuilder().addBuilder(
            index, cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.Polyline.getDefaultInstance());
      }
      /**
       * <code>repeated .gazebo.msgs.Polyline polyline = 10;</code>
       */
      public java.util.List<cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.Polyline.Builder> 
           getPolylineBuilderList() {
        return getPolylineFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.Polyline, cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.Polyline.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.PolylineOrBuilder> 
          getPolylineFieldBuilder() {
        if (polylineBuilder_ == null) {
          polylineBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.Polyline, cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.Polyline.Builder, cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.PolylineOrBuilder>(
                  polyline_,
                  ((bitField0_ & 0x00000200) == 0x00000200),
                  getParentForChildren(),
                  isClean());
          polyline_ = null;
        }
        return polylineBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:gazebo.msgs.Geometry)
    }

    static {
      defaultInstance = new Geometry(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gazebo.msgs.Geometry)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gazebo_msgs_Geometry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gazebo_msgs_Geometry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016geometry.proto\022\013gazebo.msgs\032\rboxgeom.p" +
      "roto\032\022cylindergeom.proto\032\020spheregeom.pro" +
      "to\032\017planegeom.proto\032\017imagegeom.proto\032\023he" +
      "ightmapgeom.proto\032\016meshgeom.proto\032\016vecto" +
      "r3d.proto\032\022polylinegeom.proto\"\265\004\n\010Geomet" +
      "ry\022(\n\004type\030\001 \001(\0162\032.gazebo.msgs.Geometry." +
      "Type\022!\n\003box\030\002 \001(\0132\024.gazebo.msgs.BoxGeom\022" +
      "+\n\010cylinder\030\003 \001(\0132\031.gazebo.msgs.Cylinder" +
      "Geom\022%\n\005plane\030\004 \001(\0132\026.gazebo.msgs.PlaneG" +
      "eom\022\'\n\006sphere\030\005 \001(\0132\027.gazebo.msgs.Sphere",
      "Geom\022%\n\005image\030\006 \001(\0132\026.gazebo.msgs.ImageG" +
      "eom\022-\n\theightmap\030\007 \001(\0132\032.gazebo.msgs.Hei" +
      "ghtmapGeom\022#\n\004mesh\030\010 \001(\0132\025.gazebo.msgs.M" +
      "eshGeom\022%\n\006points\030\t \003(\0132\025.gazebo.msgs.Ve" +
      "ctor3d\022\'\n\010polyline\030\n \003(\0132\025.gazebo.msgs.P" +
      "olyline\"\223\001\n\004Type\022\007\n\003BOX\020\001\022\014\n\010CYLINDER\020\002\022" +
      "\n\n\006SPHERE\020\003\022\t\n\005PLANE\020\004\022\t\n\005IMAGE\020\005\022\r\n\tHEI" +
      "GHTMAP\020\006\022\010\n\004MESH\020\007\022\020\n\014TRIANGLE_FAN\020\010\022\016\n\n" +
      "LINE_STRIP\020\t\022\014\n\010POLYLINE\020\n\022\t\n\005EMPTY\020\013B0\n" +
      "\037cn.autolabor.plugin.gazebo.msgsB\rProtoG",
      "eometry"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          cn.autolabor.plugin.gazebo.msgs.ProtoBoxgeom.getDescriptor(),
          cn.autolabor.plugin.gazebo.msgs.ProtoCylindergeom.getDescriptor(),
          cn.autolabor.plugin.gazebo.msgs.ProtoSpheregeom.getDescriptor(),
          cn.autolabor.plugin.gazebo.msgs.ProtoPlanegeom.getDescriptor(),
          cn.autolabor.plugin.gazebo.msgs.ProtoImagegeom.getDescriptor(),
          cn.autolabor.plugin.gazebo.msgs.ProtoHeightmapgeom.getDescriptor(),
          cn.autolabor.plugin.gazebo.msgs.ProtoMeshgeom.getDescriptor(),
          cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.getDescriptor(),
          cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.getDescriptor(),
        }, assigner);
    internal_static_gazebo_msgs_Geometry_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_gazebo_msgs_Geometry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_gazebo_msgs_Geometry_descriptor,
        new java.lang.String[] { "Type", "Box", "Cylinder", "Plane", "Sphere", "Image", "Heightmap", "Mesh", "Points", "Polyline", });
    cn.autolabor.plugin.gazebo.msgs.ProtoBoxgeom.getDescriptor();
    cn.autolabor.plugin.gazebo.msgs.ProtoCylindergeom.getDescriptor();
    cn.autolabor.plugin.gazebo.msgs.ProtoSpheregeom.getDescriptor();
    cn.autolabor.plugin.gazebo.msgs.ProtoPlanegeom.getDescriptor();
    cn.autolabor.plugin.gazebo.msgs.ProtoImagegeom.getDescriptor();
    cn.autolabor.plugin.gazebo.msgs.ProtoHeightmapgeom.getDescriptor();
    cn.autolabor.plugin.gazebo.msgs.ProtoMeshgeom.getDescriptor();
    cn.autolabor.plugin.gazebo.msgs.ProtoVector3d.getDescriptor();
    cn.autolabor.plugin.gazebo.msgs.ProtoPolylinegeom.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
