// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wrench.proto

package cn.autolabor.plugin.gazebo.gazebomsgs;

public final class ProtoWrench {
  private ProtoWrench() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface WrenchOrBuilder extends
      // @@protoc_insertion_point(interface_extends:gazebo.msgs.Wrench)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .gazebo.msgs.Vector3d force = 1;</code>
     */
    boolean hasForce();
    /**
     * <code>required .gazebo.msgs.Vector3d force = 1;</code>
     */
    cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d getForce();
    /**
     * <code>required .gazebo.msgs.Vector3d force = 1;</code>
     */
    cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3dOrBuilder getForceOrBuilder();

    /**
     * <code>required .gazebo.msgs.Vector3d torque = 2;</code>
     */
    boolean hasTorque();
    /**
     * <code>required .gazebo.msgs.Vector3d torque = 2;</code>
     */
    cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d getTorque();
    /**
     * <code>required .gazebo.msgs.Vector3d torque = 2;</code>
     */
    cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3dOrBuilder getTorqueOrBuilder();

    /**
     * <code>optional .gazebo.msgs.Vector3d force_offset = 3;</code>
     */
    boolean hasForceOffset();
    /**
     * <code>optional .gazebo.msgs.Vector3d force_offset = 3;</code>
     */
    cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d getForceOffset();
    /**
     * <code>optional .gazebo.msgs.Vector3d force_offset = 3;</code>
     */
    cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3dOrBuilder getForceOffsetOrBuilder();
  }
  /**
   * Protobuf type {@code gazebo.msgs.Wrench}
   */
  public static final class Wrench extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:gazebo.msgs.Wrench)
      WrenchOrBuilder {
    // Use Wrench.newBuilder() to construct.
    private Wrench(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Wrench(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Wrench defaultInstance;
    public static Wrench getDefaultInstance() {
      return defaultInstance;
    }

    public Wrench getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Wrench(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = force_.toBuilder();
              }
              force_ = input.readMessage(cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(force_);
                force_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = torque_.toBuilder();
              }
              torque_ = input.readMessage(cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(torque_);
                torque_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = forceOffset_.toBuilder();
              }
              forceOffset_ = input.readMessage(cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(forceOffset_);
                forceOffset_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.internal_static_gazebo_msgs_Wrench_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.internal_static_gazebo_msgs_Wrench_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench.class, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench.Builder.class);
    }

    public static com.google.protobuf.Parser<Wrench> PARSER =
        new com.google.protobuf.AbstractParser<Wrench>() {
      public Wrench parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Wrench(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Wrench> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FORCE_FIELD_NUMBER = 1;
    private cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d force_;
    /**
     * <code>required .gazebo.msgs.Vector3d force = 1;</code>
     */
    public boolean hasForce() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .gazebo.msgs.Vector3d force = 1;</code>
     */
    public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d getForce() {
      return force_;
    }
    /**
     * <code>required .gazebo.msgs.Vector3d force = 1;</code>
     */
    public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3dOrBuilder getForceOrBuilder() {
      return force_;
    }

    public static final int TORQUE_FIELD_NUMBER = 2;
    private cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d torque_;
    /**
     * <code>required .gazebo.msgs.Vector3d torque = 2;</code>
     */
    public boolean hasTorque() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .gazebo.msgs.Vector3d torque = 2;</code>
     */
    public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d getTorque() {
      return torque_;
    }
    /**
     * <code>required .gazebo.msgs.Vector3d torque = 2;</code>
     */
    public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3dOrBuilder getTorqueOrBuilder() {
      return torque_;
    }

    public static final int FORCE_OFFSET_FIELD_NUMBER = 3;
    private cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d forceOffset_;
    /**
     * <code>optional .gazebo.msgs.Vector3d force_offset = 3;</code>
     */
    public boolean hasForceOffset() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .gazebo.msgs.Vector3d force_offset = 3;</code>
     */
    public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d getForceOffset() {
      return forceOffset_;
    }
    /**
     * <code>optional .gazebo.msgs.Vector3d force_offset = 3;</code>
     */
    public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3dOrBuilder getForceOffsetOrBuilder() {
      return forceOffset_;
    }

    private void initFields() {
      force_ = cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.getDefaultInstance();
      torque_ = cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.getDefaultInstance();
      forceOffset_ = cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasForce()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTorque()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getForce().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getTorque().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasForceOffset()) {
        if (!getForceOffset().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, force_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, torque_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, forceOffset_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, force_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, torque_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, forceOffset_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gazebo.msgs.Wrench}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:gazebo.msgs.Wrench)
        cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.WrenchOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.internal_static_gazebo_msgs_Wrench_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.internal_static_gazebo_msgs_Wrench_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench.class, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench.Builder.class);
      }

      // Construct using cn.autolabor.plugin.gazebo.msgs.ProtoWrench.Wrench.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getForceFieldBuilder();
          getTorqueFieldBuilder();
          getForceOffsetFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (forceBuilder_ == null) {
          force_ = cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.getDefaultInstance();
        } else {
          forceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (torqueBuilder_ == null) {
          torque_ = cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.getDefaultInstance();
        } else {
          torqueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (forceOffsetBuilder_ == null) {
          forceOffset_ = cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.getDefaultInstance();
        } else {
          forceOffsetBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.internal_static_gazebo_msgs_Wrench_descriptor;
      }

      public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench getDefaultInstanceForType() {
        return cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench.getDefaultInstance();
      }

      public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench build() {
        cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench buildPartial() {
        cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench result = new cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (forceBuilder_ == null) {
          result.force_ = force_;
        } else {
          result.force_ = forceBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (torqueBuilder_ == null) {
          result.torque_ = torque_;
        } else {
          result.torque_ = torqueBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (forceOffsetBuilder_ == null) {
          result.forceOffset_ = forceOffset_;
        } else {
          result.forceOffset_ = forceOffsetBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench) {
          return mergeFrom((cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench other) {
        if (other == cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench.getDefaultInstance()) return this;
        if (other.hasForce()) {
          mergeForce(other.getForce());
        }
        if (other.hasTorque()) {
          mergeTorque(other.getTorque());
        }
        if (other.hasForceOffset()) {
          mergeForceOffset(other.getForceOffset());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasForce()) {
          
          return false;
        }
        if (!hasTorque()) {
          
          return false;
        }
        if (!getForce().isInitialized()) {
          
          return false;
        }
        if (!getTorque().isInitialized()) {
          
          return false;
        }
        if (hasForceOffset()) {
          if (!getForceOffset().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d force_ = cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.Builder, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3dOrBuilder> forceBuilder_;
      /**
       * <code>required .gazebo.msgs.Vector3d force = 1;</code>
       */
      public boolean hasForce() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .gazebo.msgs.Vector3d force = 1;</code>
       */
      public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d getForce() {
        if (forceBuilder_ == null) {
          return force_;
        } else {
          return forceBuilder_.getMessage();
        }
      }
      /**
       * <code>required .gazebo.msgs.Vector3d force = 1;</code>
       */
      public Builder setForce(cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d value) {
        if (forceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          force_ = value;
          onChanged();
        } else {
          forceBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .gazebo.msgs.Vector3d force = 1;</code>
       */
      public Builder setForce(
          cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.Builder builderForValue) {
        if (forceBuilder_ == null) {
          force_ = builderForValue.build();
          onChanged();
        } else {
          forceBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .gazebo.msgs.Vector3d force = 1;</code>
       */
      public Builder mergeForce(cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d value) {
        if (forceBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              force_ != cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.getDefaultInstance()) {
            force_ =
              cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.newBuilder(force_).mergeFrom(value).buildPartial();
          } else {
            force_ = value;
          }
          onChanged();
        } else {
          forceBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .gazebo.msgs.Vector3d force = 1;</code>
       */
      public Builder clearForce() {
        if (forceBuilder_ == null) {
          force_ = cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.getDefaultInstance();
          onChanged();
        } else {
          forceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .gazebo.msgs.Vector3d force = 1;</code>
       */
      public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.Builder getForceBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getForceFieldBuilder().getBuilder();
      }
      /**
       * <code>required .gazebo.msgs.Vector3d force = 1;</code>
       */
      public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3dOrBuilder getForceOrBuilder() {
        if (forceBuilder_ != null) {
          return forceBuilder_.getMessageOrBuilder();
        } else {
          return force_;
        }
      }
      /**
       * <code>required .gazebo.msgs.Vector3d force = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.Builder, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3dOrBuilder>
          getForceFieldBuilder() {
        if (forceBuilder_ == null) {
          forceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.Builder, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3dOrBuilder>(
                  getForce(),
                  getParentForChildren(),
                  isClean());
          force_ = null;
        }
        return forceBuilder_;
      }

      private cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d torque_ = cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.Builder, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3dOrBuilder> torqueBuilder_;
      /**
       * <code>required .gazebo.msgs.Vector3d torque = 2;</code>
       */
      public boolean hasTorque() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .gazebo.msgs.Vector3d torque = 2;</code>
       */
      public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d getTorque() {
        if (torqueBuilder_ == null) {
          return torque_;
        } else {
          return torqueBuilder_.getMessage();
        }
      }
      /**
       * <code>required .gazebo.msgs.Vector3d torque = 2;</code>
       */
      public Builder setTorque(cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d value) {
        if (torqueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          torque_ = value;
          onChanged();
        } else {
          torqueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .gazebo.msgs.Vector3d torque = 2;</code>
       */
      public Builder setTorque(
          cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.Builder builderForValue) {
        if (torqueBuilder_ == null) {
          torque_ = builderForValue.build();
          onChanged();
        } else {
          torqueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .gazebo.msgs.Vector3d torque = 2;</code>
       */
      public Builder mergeTorque(cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d value) {
        if (torqueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              torque_ != cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.getDefaultInstance()) {
            torque_ =
              cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.newBuilder(torque_).mergeFrom(value).buildPartial();
          } else {
            torque_ = value;
          }
          onChanged();
        } else {
          torqueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .gazebo.msgs.Vector3d torque = 2;</code>
       */
      public Builder clearTorque() {
        if (torqueBuilder_ == null) {
          torque_ = cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.getDefaultInstance();
          onChanged();
        } else {
          torqueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .gazebo.msgs.Vector3d torque = 2;</code>
       */
      public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.Builder getTorqueBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTorqueFieldBuilder().getBuilder();
      }
      /**
       * <code>required .gazebo.msgs.Vector3d torque = 2;</code>
       */
      public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3dOrBuilder getTorqueOrBuilder() {
        if (torqueBuilder_ != null) {
          return torqueBuilder_.getMessageOrBuilder();
        } else {
          return torque_;
        }
      }
      /**
       * <code>required .gazebo.msgs.Vector3d torque = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.Builder, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3dOrBuilder>
          getTorqueFieldBuilder() {
        if (torqueBuilder_ == null) {
          torqueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.Builder, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3dOrBuilder>(
                  getTorque(),
                  getParentForChildren(),
                  isClean());
          torque_ = null;
        }
        return torqueBuilder_;
      }

      private cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d forceOffset_ = cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.Builder, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3dOrBuilder> forceOffsetBuilder_;
      /**
       * <code>optional .gazebo.msgs.Vector3d force_offset = 3;</code>
       */
      public boolean hasForceOffset() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .gazebo.msgs.Vector3d force_offset = 3;</code>
       */
      public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d getForceOffset() {
        if (forceOffsetBuilder_ == null) {
          return forceOffset_;
        } else {
          return forceOffsetBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gazebo.msgs.Vector3d force_offset = 3;</code>
       */
      public Builder setForceOffset(cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d value) {
        if (forceOffsetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          forceOffset_ = value;
          onChanged();
        } else {
          forceOffsetBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.Vector3d force_offset = 3;</code>
       */
      public Builder setForceOffset(
          cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.Builder builderForValue) {
        if (forceOffsetBuilder_ == null) {
          forceOffset_ = builderForValue.build();
          onChanged();
        } else {
          forceOffsetBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.Vector3d force_offset = 3;</code>
       */
      public Builder mergeForceOffset(cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d value) {
        if (forceOffsetBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              forceOffset_ != cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.getDefaultInstance()) {
            forceOffset_ =
              cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.newBuilder(forceOffset_).mergeFrom(value).buildPartial();
          } else {
            forceOffset_ = value;
          }
          onChanged();
        } else {
          forceOffsetBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.Vector3d force_offset = 3;</code>
       */
      public Builder clearForceOffset() {
        if (forceOffsetBuilder_ == null) {
          forceOffset_ = cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.getDefaultInstance();
          onChanged();
        } else {
          forceOffsetBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.Vector3d force_offset = 3;</code>
       */
      public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.Builder getForceOffsetBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getForceOffsetFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gazebo.msgs.Vector3d force_offset = 3;</code>
       */
      public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3dOrBuilder getForceOffsetOrBuilder() {
        if (forceOffsetBuilder_ != null) {
          return forceOffsetBuilder_.getMessageOrBuilder();
        } else {
          return forceOffset_;
        }
      }
      /**
       * <code>optional .gazebo.msgs.Vector3d force_offset = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.Builder, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3dOrBuilder>
          getForceOffsetFieldBuilder() {
        if (forceOffsetBuilder_ == null) {
          forceOffsetBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3d.Builder, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.Vector3dOrBuilder>(
                  getForceOffset(),
                  getParentForChildren(),
                  isClean());
          forceOffset_ = null;
        }
        return forceOffsetBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:gazebo.msgs.Wrench)
    }

    static {
      defaultInstance = new Wrench(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gazebo.msgs.Wrench)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gazebo_msgs_Wrench_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gazebo_msgs_Wrench_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014wrench.proto\022\013gazebo.msgs\032\016vector3d.pr" +
      "oto\"\202\001\n\006Wrench\022$\n\005force\030\001 \002(\0132\025.gazebo.m" +
      "sgs.Vector3d\022%\n\006torque\030\002 \002(\0132\025.gazebo.ms" +
      "gs.Vector3d\022+\n\014force_offset\030\003 \001(\0132\025.gaze" +
      "bo.msgs.Vector3dB.\n\037cn.autolabor.plugin." +
      "gazebo.msgsB\013ProtoWrench"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.getDescriptor(),
        }, assigner);
    internal_static_gazebo_msgs_Wrench_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_gazebo_msgs_Wrench_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_gazebo_msgs_Wrench_descriptor,
        new java.lang.String[] { "Force", "Torque", "ForceOffset", });
    cn.autolabor.plugin.gazebo.gazebomsgs.ProtoVector3d.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
