// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: user_cmd.proto

package cn.autolabor.plugin.gazebo.gazebomsgs;

public final class ProtoUserCmd {
  private ProtoUserCmd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface UserCmdOrBuilder extends
      // @@protoc_insertion_point(interface_extends:gazebo.msgs.UserCmd)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 id = 1;</code>
     *
     * <pre>
     *&#47; &#92;brief Unique id for user command.
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional uint32 id = 1;</code>
     *
     * <pre>
     *&#47; &#92;brief Unique id for user command.
     * </pre>
     */
    int getId();

    /**
     * <code>required string description = 2;</code>
     *
     * <pre>
     *&#47; &#92;brief Description for the command.
     * </pre>
     */
    boolean hasDescription();
    /**
     * <code>required string description = 2;</code>
     *
     * <pre>
     *&#47; &#92;brief Description for the command.
     * </pre>
     */
    java.lang.String getDescription();
    /**
     * <code>required string description = 2;</code>
     *
     * <pre>
     *&#47; &#92;brief Description for the command.
     * </pre>
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <code>required .gazebo.msgs.UserCmd.Type type = 3;</code>
     *
     * <pre>
     *&#47; &#92;brief Type of command.
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required .gazebo.msgs.UserCmd.Type type = 3;</code>
     *
     * <pre>
     *&#47; &#92;brief Type of command.
     * </pre>
     */
    cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd.Type getType();

    /**
     * <code>repeated .gazebo.msgs.Model model = 4;</code>
     *
     * <pre>
     *&#47; &#92;brief For model modify commands.
     * </pre>
     */
    java.util.List<cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.Model>
        getModelList();
    /**
     * <code>repeated .gazebo.msgs.Model model = 4;</code>
     *
     * <pre>
     *&#47; &#92;brief For model modify commands.
     * </pre>
     */
    cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.Model getModel(int index);
    /**
     * <code>repeated .gazebo.msgs.Model model = 4;</code>
     *
     * <pre>
     *&#47; &#92;brief For model modify commands.
     * </pre>
     */
    int getModelCount();
    /**
     * <code>repeated .gazebo.msgs.Model model = 4;</code>
     *
     * <pre>
     *&#47; &#92;brief For model modify commands.
     * </pre>
     */
    java.util.List<? extends cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.ModelOrBuilder>
        getModelOrBuilderList();
    /**
     * <code>repeated .gazebo.msgs.Model model = 4;</code>
     *
     * <pre>
     *&#47; &#92;brief For model modify commands.
     * </pre>
     */
    cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.ModelOrBuilder getModelOrBuilder(
        int index);

    /**
     * <code>repeated .gazebo.msgs.Light light = 5;</code>
     *
     * <pre>
     *&#47; &#92;brief For light modify commands.
     * </pre>
     */
    java.util.List<cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.Light>
        getLightList();
    /**
     * <code>repeated .gazebo.msgs.Light light = 5;</code>
     *
     * <pre>
     *&#47; &#92;brief For light modify commands.
     * </pre>
     */
    cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.Light getLight(int index);
    /**
     * <code>repeated .gazebo.msgs.Light light = 5;</code>
     *
     * <pre>
     *&#47; &#92;brief For light modify commands.
     * </pre>
     */
    int getLightCount();
    /**
     * <code>repeated .gazebo.msgs.Light light = 5;</code>
     *
     * <pre>
     *&#47; &#92;brief For light modify commands.
     * </pre>
     */
    java.util.List<? extends cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.LightOrBuilder>
        getLightOrBuilderList();
    /**
     * <code>repeated .gazebo.msgs.Light light = 5;</code>
     *
     * <pre>
     *&#47; &#92;brief For light modify commands.
     * </pre>
     */
    cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.LightOrBuilder getLightOrBuilder(
        int index);

    /**
     * <code>optional string entity_name = 6;</code>
     *
     * <pre>
     *&#47; &#92;brief Name of entity targeted by command
     * </pre>
     */
    boolean hasEntityName();
    /**
     * <code>optional string entity_name = 6;</code>
     *
     * <pre>
     *&#47; &#92;brief Name of entity targeted by command
     * </pre>
     */
    java.lang.String getEntityName();
    /**
     * <code>optional string entity_name = 6;</code>
     *
     * <pre>
     *&#47; &#92;brief Name of entity targeted by command
     * </pre>
     */
    com.google.protobuf.ByteString
        getEntityNameBytes();

    /**
     * <code>optional .gazebo.msgs.WorldControl world_control = 7;</code>
     *
     * <pre>
     *&#47; &#92;brief For World Control commands.
     * </pre>
     */
    boolean hasWorldControl();
    /**
     * <code>optional .gazebo.msgs.WorldControl world_control = 7;</code>
     *
     * <pre>
     *&#47; &#92;brief For World Control commands.
     * </pre>
     */
    cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWorldControl.WorldControl getWorldControl();
    /**
     * <code>optional .gazebo.msgs.WorldControl world_control = 7;</code>
     *
     * <pre>
     *&#47; &#92;brief For World Control commands.
     * </pre>
     */
    cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWorldControl.WorldControlOrBuilder getWorldControlOrBuilder();

    /**
     * <code>optional .gazebo.msgs.Wrench wrench = 8;</code>
     *
     * <pre>
     *&#47; &#92;brief Wrench for apply wrench commands.
     * </pre>
     */
    boolean hasWrench();
    /**
     * <code>optional .gazebo.msgs.Wrench wrench = 8;</code>
     *
     * <pre>
     *&#47; &#92;brief Wrench for apply wrench commands.
     * </pre>
     */
    cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench getWrench();
    /**
     * <code>optional .gazebo.msgs.Wrench wrench = 8;</code>
     *
     * <pre>
     *&#47; &#92;brief Wrench for apply wrench commands.
     * </pre>
     */
    cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.WrenchOrBuilder getWrenchOrBuilder();
  }
  /**
   * Protobuf type {@code gazebo.msgs.UserCmd}
   */
  public static final class UserCmd extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:gazebo.msgs.UserCmd)
      UserCmdOrBuilder {
    // Use UserCmd.newBuilder() to construct.
    private UserCmd(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UserCmd(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UserCmd defaultInstance;
    public static UserCmd getDefaultInstance() {
      return defaultInstance;
    }

    public UserCmd getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UserCmd(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              description_ = bs;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd.Type value = cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                type_ = value;
              }
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                model_ = new java.util.ArrayList<cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.Model>();
                mutable_bitField0_ |= 0x00000008;
              }
              model_.add(input.readMessage(cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.Model.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                light_ = new java.util.ArrayList<cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.Light>();
                mutable_bitField0_ |= 0x00000010;
              }
              light_.add(input.readMessage(cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.Light.PARSER, extensionRegistry));
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              entityName_ = bs;
              break;
            }
            case 58: {
              cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWorldControl.WorldControl.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = worldControl_.toBuilder();
              }
              worldControl_ = input.readMessage(cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWorldControl.WorldControl.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(worldControl_);
                worldControl_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 66: {
              cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = wrench_.toBuilder();
              }
              wrench_ = input.readMessage(cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(wrench_);
                wrench_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          model_ = java.util.Collections.unmodifiableList(model_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          light_ = java.util.Collections.unmodifiableList(light_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.internal_static_gazebo_msgs_UserCmd_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.internal_static_gazebo_msgs_UserCmd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd.class, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd.Builder.class);
    }

    public static com.google.protobuf.Parser<UserCmd> PARSER =
        new com.google.protobuf.AbstractParser<UserCmd>() {
      public UserCmd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UserCmd(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UserCmd> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code gazebo.msgs.UserCmd.Type}
     *
     * <pre>
     *&#47; &#92;brief Types of user commands
     * </pre>
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>MOVING = 1;</code>
       *
       * <pre>
       *&#47; &#92;brief Moving an entity.
       * </pre>
       */
      MOVING(0, 1),
      /**
       * <code>WORLD_CONTROL = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief Controlling the world.
       * </pre>
       */
      WORLD_CONTROL(1, 2),
      /**
       * <code>WRENCH = 3;</code>
       *
       * <pre>
       *&#47; &#92;brief Applying wrench.
       * </pre>
       */
      WRENCH(2, 3),
      /**
       * <code>SCALING = 4;</code>
       *
       * <pre>
       *&#47; &#92;brief Scaling an entity.
       * </pre>
       */
      SCALING(3, 4),
      ;

      /**
       * <code>MOVING = 1;</code>
       *
       * <pre>
       *&#47; &#92;brief Moving an entity.
       * </pre>
       */
      public static final int MOVING_VALUE = 1;
      /**
       * <code>WORLD_CONTROL = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief Controlling the world.
       * </pre>
       */
      public static final int WORLD_CONTROL_VALUE = 2;
      /**
       * <code>WRENCH = 3;</code>
       *
       * <pre>
       *&#47; &#92;brief Applying wrench.
       * </pre>
       */
      public static final int WRENCH_VALUE = 3;
      /**
       * <code>SCALING = 4;</code>
       *
       * <pre>
       *&#47; &#92;brief Scaling an entity.
       * </pre>
       */
      public static final int SCALING_VALUE = 4;


      public final int getNumber() { return value; }

      public static Type valueOf(int value) {
        switch (value) {
          case 1: return MOVING;
          case 2: return WORLD_CONTROL;
          case 3: return WRENCH;
          case 4: return SCALING;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Type(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:gazebo.msgs.UserCmd.Type)
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>optional uint32 id = 1;</code>
     *
     * <pre>
     *&#47; &#92;brief Unique id for user command.
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 id = 1;</code>
     *
     * <pre>
     *&#47; &#92;brief Unique id for user command.
     * </pre>
     */
    public int getId() {
      return id_;
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 2;
    private java.lang.Object description_;
    /**
     * <code>required string description = 2;</code>
     *
     * <pre>
     *&#47; &#92;brief Description for the command.
     * </pre>
     */
    public boolean hasDescription() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string description = 2;</code>
     *
     * <pre>
     *&#47; &#92;brief Description for the command.
     * </pre>
     */
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          description_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string description = 2;</code>
     *
     * <pre>
     *&#47; &#92;brief Description for the command.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd.Type type_;
    /**
     * <code>required .gazebo.msgs.UserCmd.Type type = 3;</code>
     *
     * <pre>
     *&#47; &#92;brief Type of command.
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .gazebo.msgs.UserCmd.Type type = 3;</code>
     *
     * <pre>
     *&#47; &#92;brief Type of command.
     * </pre>
     */
    public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd.Type getType() {
      return type_;
    }

    public static final int MODEL_FIELD_NUMBER = 4;
    private java.util.List<cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.Model> model_;
    /**
     * <code>repeated .gazebo.msgs.Model model = 4;</code>
     *
     * <pre>
     *&#47; &#92;brief For model modify commands.
     * </pre>
     */
    public java.util.List<cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.Model> getModelList() {
      return model_;
    }
    /**
     * <code>repeated .gazebo.msgs.Model model = 4;</code>
     *
     * <pre>
     *&#47; &#92;brief For model modify commands.
     * </pre>
     */
    public java.util.List<? extends cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.ModelOrBuilder>
        getModelOrBuilderList() {
      return model_;
    }
    /**
     * <code>repeated .gazebo.msgs.Model model = 4;</code>
     *
     * <pre>
     *&#47; &#92;brief For model modify commands.
     * </pre>
     */
    public int getModelCount() {
      return model_.size();
    }
    /**
     * <code>repeated .gazebo.msgs.Model model = 4;</code>
     *
     * <pre>
     *&#47; &#92;brief For model modify commands.
     * </pre>
     */
    public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.Model getModel(int index) {
      return model_.get(index);
    }
    /**
     * <code>repeated .gazebo.msgs.Model model = 4;</code>
     *
     * <pre>
     *&#47; &#92;brief For model modify commands.
     * </pre>
     */
    public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.ModelOrBuilder getModelOrBuilder(
        int index) {
      return model_.get(index);
    }

    public static final int LIGHT_FIELD_NUMBER = 5;
    private java.util.List<cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.Light> light_;
    /**
     * <code>repeated .gazebo.msgs.Light light = 5;</code>
     *
     * <pre>
     *&#47; &#92;brief For light modify commands.
     * </pre>
     */
    public java.util.List<cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.Light> getLightList() {
      return light_;
    }
    /**
     * <code>repeated .gazebo.msgs.Light light = 5;</code>
     *
     * <pre>
     *&#47; &#92;brief For light modify commands.
     * </pre>
     */
    public java.util.List<? extends cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.LightOrBuilder>
        getLightOrBuilderList() {
      return light_;
    }
    /**
     * <code>repeated .gazebo.msgs.Light light = 5;</code>
     *
     * <pre>
     *&#47; &#92;brief For light modify commands.
     * </pre>
     */
    public int getLightCount() {
      return light_.size();
    }
    /**
     * <code>repeated .gazebo.msgs.Light light = 5;</code>
     *
     * <pre>
     *&#47; &#92;brief For light modify commands.
     * </pre>
     */
    public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.Light getLight(int index) {
      return light_.get(index);
    }
    /**
     * <code>repeated .gazebo.msgs.Light light = 5;</code>
     *
     * <pre>
     *&#47; &#92;brief For light modify commands.
     * </pre>
     */
    public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.LightOrBuilder getLightOrBuilder(
        int index) {
      return light_.get(index);
    }

    public static final int ENTITY_NAME_FIELD_NUMBER = 6;
    private java.lang.Object entityName_;
    /**
     * <code>optional string entity_name = 6;</code>
     *
     * <pre>
     *&#47; &#92;brief Name of entity targeted by command
     * </pre>
     */
    public boolean hasEntityName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string entity_name = 6;</code>
     *
     * <pre>
     *&#47; &#92;brief Name of entity targeted by command
     * </pre>
     */
    public java.lang.String getEntityName() {
      java.lang.Object ref = entityName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          entityName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string entity_name = 6;</code>
     *
     * <pre>
     *&#47; &#92;brief Name of entity targeted by command
     * </pre>
     */
    public com.google.protobuf.ByteString
        getEntityNameBytes() {
      java.lang.Object ref = entityName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        entityName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int WORLD_CONTROL_FIELD_NUMBER = 7;
    private cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWorldControl.WorldControl worldControl_;
    /**
     * <code>optional .gazebo.msgs.WorldControl world_control = 7;</code>
     *
     * <pre>
     *&#47; &#92;brief For World Control commands.
     * </pre>
     */
    public boolean hasWorldControl() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .gazebo.msgs.WorldControl world_control = 7;</code>
     *
     * <pre>
     *&#47; &#92;brief For World Control commands.
     * </pre>
     */
    public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWorldControl.WorldControl getWorldControl() {
      return worldControl_;
    }
    /**
     * <code>optional .gazebo.msgs.WorldControl world_control = 7;</code>
     *
     * <pre>
     *&#47; &#92;brief For World Control commands.
     * </pre>
     */
    public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWorldControl.WorldControlOrBuilder getWorldControlOrBuilder() {
      return worldControl_;
    }

    public static final int WRENCH_FIELD_NUMBER = 8;
    private cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench wrench_;
    /**
     * <code>optional .gazebo.msgs.Wrench wrench = 8;</code>
     *
     * <pre>
     *&#47; &#92;brief Wrench for apply wrench commands.
     * </pre>
     */
    public boolean hasWrench() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .gazebo.msgs.Wrench wrench = 8;</code>
     *
     * <pre>
     *&#47; &#92;brief Wrench for apply wrench commands.
     * </pre>
     */
    public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench getWrench() {
      return wrench_;
    }
    /**
     * <code>optional .gazebo.msgs.Wrench wrench = 8;</code>
     *
     * <pre>
     *&#47; &#92;brief Wrench for apply wrench commands.
     * </pre>
     */
    public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.WrenchOrBuilder getWrenchOrBuilder() {
      return wrench_;
    }

    private void initFields() {
      id_ = 0;
      description_ = "";
      type_ = cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd.Type.MOVING;
      model_ = java.util.Collections.emptyList();
      light_ = java.util.Collections.emptyList();
      entityName_ = "";
      worldControl_ = cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWorldControl.WorldControl.getDefaultInstance();
      wrench_ = cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasDescription()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getModelCount(); i++) {
        if (!getModel(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getLightCount(); i++) {
        if (!getLight(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasWrench()) {
        if (!getWrench().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getDescriptionBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, type_.getNumber());
      }
      for (int i = 0; i < model_.size(); i++) {
        output.writeMessage(4, model_.get(i));
      }
      for (int i = 0; i < light_.size(); i++) {
        output.writeMessage(5, light_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(6, getEntityNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(7, worldControl_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(8, wrench_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getDescriptionBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, type_.getNumber());
      }
      for (int i = 0; i < model_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, model_.get(i));
      }
      for (int i = 0; i < light_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, light_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getEntityNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, worldControl_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, wrench_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gazebo.msgs.UserCmd}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:gazebo.msgs.UserCmd)
        cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.internal_static_gazebo_msgs_UserCmd_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.internal_static_gazebo_msgs_UserCmd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd.class, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd.Builder.class);
      }

      // Construct using cn.autolabor.plugin.gazebo.msgs.ProtoUserCmd.UserCmd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getModelFieldBuilder();
          getLightFieldBuilder();
          getWorldControlFieldBuilder();
          getWrenchFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        description_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd.Type.MOVING;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (modelBuilder_ == null) {
          model_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          modelBuilder_.clear();
        }
        if (lightBuilder_ == null) {
          light_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          lightBuilder_.clear();
        }
        entityName_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        if (worldControlBuilder_ == null) {
          worldControl_ = cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWorldControl.WorldControl.getDefaultInstance();
        } else {
          worldControlBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (wrenchBuilder_ == null) {
          wrench_ = cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench.getDefaultInstance();
        } else {
          wrenchBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.internal_static_gazebo_msgs_UserCmd_descriptor;
      }

      public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd getDefaultInstanceForType() {
        return cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd.getDefaultInstance();
      }

      public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd build() {
        cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd buildPartial() {
        cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd result = new cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.description_ = description_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.type_ = type_;
        if (modelBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            model_ = java.util.Collections.unmodifiableList(model_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.model_ = model_;
        } else {
          result.model_ = modelBuilder_.build();
        }
        if (lightBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            light_ = java.util.Collections.unmodifiableList(light_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.light_ = light_;
        } else {
          result.light_ = lightBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.entityName_ = entityName_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        if (worldControlBuilder_ == null) {
          result.worldControl_ = worldControl_;
        } else {
          result.worldControl_ = worldControlBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        if (wrenchBuilder_ == null) {
          result.wrench_ = wrench_;
        } else {
          result.wrench_ = wrenchBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd) {
          return mergeFrom((cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd other) {
        if (other == cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasDescription()) {
          bitField0_ |= 0x00000002;
          description_ = other.description_;
          onChanged();
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (modelBuilder_ == null) {
          if (!other.model_.isEmpty()) {
            if (model_.isEmpty()) {
              model_ = other.model_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureModelIsMutable();
              model_.addAll(other.model_);
            }
            onChanged();
          }
        } else {
          if (!other.model_.isEmpty()) {
            if (modelBuilder_.isEmpty()) {
              modelBuilder_.dispose();
              modelBuilder_ = null;
              model_ = other.model_;
              bitField0_ = (bitField0_ & ~0x00000008);
              modelBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getModelFieldBuilder() : null;
            } else {
              modelBuilder_.addAllMessages(other.model_);
            }
          }
        }
        if (lightBuilder_ == null) {
          if (!other.light_.isEmpty()) {
            if (light_.isEmpty()) {
              light_ = other.light_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureLightIsMutable();
              light_.addAll(other.light_);
            }
            onChanged();
          }
        } else {
          if (!other.light_.isEmpty()) {
            if (lightBuilder_.isEmpty()) {
              lightBuilder_.dispose();
              lightBuilder_ = null;
              light_ = other.light_;
              bitField0_ = (bitField0_ & ~0x00000010);
              lightBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getLightFieldBuilder() : null;
            } else {
              lightBuilder_.addAllMessages(other.light_);
            }
          }
        }
        if (other.hasEntityName()) {
          bitField0_ |= 0x00000020;
          entityName_ = other.entityName_;
          onChanged();
        }
        if (other.hasWorldControl()) {
          mergeWorldControl(other.getWorldControl());
        }
        if (other.hasWrench()) {
          mergeWrench(other.getWrench());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDescription()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        for (int i = 0; i < getModelCount(); i++) {
          if (!getModel(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getLightCount(); i++) {
          if (!getLight(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasWrench()) {
          if (!getWrench().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       *&#47; &#92;brief Unique id for user command.
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       *&#47; &#92;brief Unique id for user command.
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       *&#47; &#92;brief Unique id for user command.
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       *&#47; &#92;brief Unique id for user command.
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <code>required string description = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief Description for the command.
       * </pre>
       */
      public boolean hasDescription() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string description = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief Description for the command.
       * </pre>
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            description_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string description = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief Description for the command.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string description = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief Description for the command.
       * </pre>
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string description = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief Description for the command.
       * </pre>
       */
      public Builder clearDescription() {
        bitField0_ = (bitField0_ & ~0x00000002);
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <code>required string description = 2;</code>
       *
       * <pre>
       *&#47; &#92;brief Description for the command.
       * </pre>
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        description_ = value;
        onChanged();
        return this;
      }

      private cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd.Type type_ = cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd.Type.MOVING;
      /**
       * <code>required .gazebo.msgs.UserCmd.Type type = 3;</code>
       *
       * <pre>
       *&#47; &#92;brief Type of command.
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .gazebo.msgs.UserCmd.Type type = 3;</code>
       *
       * <pre>
       *&#47; &#92;brief Type of command.
       * </pre>
       */
      public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd.Type getType() {
        return type_;
      }
      /**
       * <code>required .gazebo.msgs.UserCmd.Type type = 3;</code>
       *
       * <pre>
       *&#47; &#92;brief Type of command.
       * </pre>
       */
      public Builder setType(cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .gazebo.msgs.UserCmd.Type type = 3;</code>
       *
       * <pre>
       *&#47; &#92;brief Type of command.
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = cn.autolabor.plugin.gazebo.gazebomsgs.ProtoUserCmd.UserCmd.Type.MOVING;
        onChanged();
        return this;
      }

      private java.util.List<cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.Model> model_ =
        java.util.Collections.emptyList();
      private void ensureModelIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          model_ = new java.util.ArrayList<cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.Model>(model_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.Model, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.Model.Builder, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.ModelOrBuilder> modelBuilder_;

      /**
       * <code>repeated .gazebo.msgs.Model model = 4;</code>
       *
       * <pre>
       *&#47; &#92;brief For model modify commands.
       * </pre>
       */
      public java.util.List<cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.Model> getModelList() {
        if (modelBuilder_ == null) {
          return java.util.Collections.unmodifiableList(model_);
        } else {
          return modelBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .gazebo.msgs.Model model = 4;</code>
       *
       * <pre>
       *&#47; &#92;brief For model modify commands.
       * </pre>
       */
      public int getModelCount() {
        if (modelBuilder_ == null) {
          return model_.size();
        } else {
          return modelBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .gazebo.msgs.Model model = 4;</code>
       *
       * <pre>
       *&#47; &#92;brief For model modify commands.
       * </pre>
       */
      public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.Model getModel(int index) {
        if (modelBuilder_ == null) {
          return model_.get(index);
        } else {
          return modelBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .gazebo.msgs.Model model = 4;</code>
       *
       * <pre>
       *&#47; &#92;brief For model modify commands.
       * </pre>
       */
      public Builder setModel(
          int index, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.Model value) {
        if (modelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModelIsMutable();
          model_.set(index, value);
          onChanged();
        } else {
          modelBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Model model = 4;</code>
       *
       * <pre>
       *&#47; &#92;brief For model modify commands.
       * </pre>
       */
      public Builder setModel(
          int index, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.Model.Builder builderForValue) {
        if (modelBuilder_ == null) {
          ensureModelIsMutable();
          model_.set(index, builderForValue.build());
          onChanged();
        } else {
          modelBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Model model = 4;</code>
       *
       * <pre>
       *&#47; &#92;brief For model modify commands.
       * </pre>
       */
      public Builder addModel(cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.Model value) {
        if (modelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModelIsMutable();
          model_.add(value);
          onChanged();
        } else {
          modelBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Model model = 4;</code>
       *
       * <pre>
       *&#47; &#92;brief For model modify commands.
       * </pre>
       */
      public Builder addModel(
          int index, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.Model value) {
        if (modelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModelIsMutable();
          model_.add(index, value);
          onChanged();
        } else {
          modelBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Model model = 4;</code>
       *
       * <pre>
       *&#47; &#92;brief For model modify commands.
       * </pre>
       */
      public Builder addModel(
          cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.Model.Builder builderForValue) {
        if (modelBuilder_ == null) {
          ensureModelIsMutable();
          model_.add(builderForValue.build());
          onChanged();
        } else {
          modelBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Model model = 4;</code>
       *
       * <pre>
       *&#47; &#92;brief For model modify commands.
       * </pre>
       */
      public Builder addModel(
          int index, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.Model.Builder builderForValue) {
        if (modelBuilder_ == null) {
          ensureModelIsMutable();
          model_.add(index, builderForValue.build());
          onChanged();
        } else {
          modelBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Model model = 4;</code>
       *
       * <pre>
       *&#47; &#92;brief For model modify commands.
       * </pre>
       */
      public Builder addAllModel(
          java.lang.Iterable<? extends cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.Model> values) {
        if (modelBuilder_ == null) {
          ensureModelIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, model_);
          onChanged();
        } else {
          modelBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Model model = 4;</code>
       *
       * <pre>
       *&#47; &#92;brief For model modify commands.
       * </pre>
       */
      public Builder clearModel() {
        if (modelBuilder_ == null) {
          model_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          modelBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Model model = 4;</code>
       *
       * <pre>
       *&#47; &#92;brief For model modify commands.
       * </pre>
       */
      public Builder removeModel(int index) {
        if (modelBuilder_ == null) {
          ensureModelIsMutable();
          model_.remove(index);
          onChanged();
        } else {
          modelBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Model model = 4;</code>
       *
       * <pre>
       *&#47; &#92;brief For model modify commands.
       * </pre>
       */
      public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.Model.Builder getModelBuilder(
          int index) {
        return getModelFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .gazebo.msgs.Model model = 4;</code>
       *
       * <pre>
       *&#47; &#92;brief For model modify commands.
       * </pre>
       */
      public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.ModelOrBuilder getModelOrBuilder(
          int index) {
        if (modelBuilder_ == null) {
          return model_.get(index);  } else {
          return modelBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .gazebo.msgs.Model model = 4;</code>
       *
       * <pre>
       *&#47; &#92;brief For model modify commands.
       * </pre>
       */
      public java.util.List<? extends cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.ModelOrBuilder>
           getModelOrBuilderList() {
        if (modelBuilder_ != null) {
          return modelBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(model_);
        }
      }
      /**
       * <code>repeated .gazebo.msgs.Model model = 4;</code>
       *
       * <pre>
       *&#47; &#92;brief For model modify commands.
       * </pre>
       */
      public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.Model.Builder addModelBuilder() {
        return getModelFieldBuilder().addBuilder(
            cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.Model.getDefaultInstance());
      }
      /**
       * <code>repeated .gazebo.msgs.Model model = 4;</code>
       *
       * <pre>
       *&#47; &#92;brief For model modify commands.
       * </pre>
       */
      public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.Model.Builder addModelBuilder(
          int index) {
        return getModelFieldBuilder().addBuilder(
            index, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.Model.getDefaultInstance());
      }
      /**
       * <code>repeated .gazebo.msgs.Model model = 4;</code>
       *
       * <pre>
       *&#47; &#92;brief For model modify commands.
       * </pre>
       */
      public java.util.List<cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.Model.Builder>
           getModelBuilderList() {
        return getModelFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.Model, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.Model.Builder, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.ModelOrBuilder>
          getModelFieldBuilder() {
        if (modelBuilder_ == null) {
          modelBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.Model, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.Model.Builder, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.ModelOrBuilder>(
                  model_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          model_ = null;
        }
        return modelBuilder_;
      }

      private java.util.List<cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.Light> light_ =
        java.util.Collections.emptyList();
      private void ensureLightIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          light_ = new java.util.ArrayList<cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.Light>(light_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.Light, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.Light.Builder, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.LightOrBuilder> lightBuilder_;

      /**
       * <code>repeated .gazebo.msgs.Light light = 5;</code>
       *
       * <pre>
       *&#47; &#92;brief For light modify commands.
       * </pre>
       */
      public java.util.List<cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.Light> getLightList() {
        if (lightBuilder_ == null) {
          return java.util.Collections.unmodifiableList(light_);
        } else {
          return lightBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .gazebo.msgs.Light light = 5;</code>
       *
       * <pre>
       *&#47; &#92;brief For light modify commands.
       * </pre>
       */
      public int getLightCount() {
        if (lightBuilder_ == null) {
          return light_.size();
        } else {
          return lightBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .gazebo.msgs.Light light = 5;</code>
       *
       * <pre>
       *&#47; &#92;brief For light modify commands.
       * </pre>
       */
      public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.Light getLight(int index) {
        if (lightBuilder_ == null) {
          return light_.get(index);
        } else {
          return lightBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .gazebo.msgs.Light light = 5;</code>
       *
       * <pre>
       *&#47; &#92;brief For light modify commands.
       * </pre>
       */
      public Builder setLight(
          int index, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.Light value) {
        if (lightBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLightIsMutable();
          light_.set(index, value);
          onChanged();
        } else {
          lightBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Light light = 5;</code>
       *
       * <pre>
       *&#47; &#92;brief For light modify commands.
       * </pre>
       */
      public Builder setLight(
          int index, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.Light.Builder builderForValue) {
        if (lightBuilder_ == null) {
          ensureLightIsMutable();
          light_.set(index, builderForValue.build());
          onChanged();
        } else {
          lightBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Light light = 5;</code>
       *
       * <pre>
       *&#47; &#92;brief For light modify commands.
       * </pre>
       */
      public Builder addLight(cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.Light value) {
        if (lightBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLightIsMutable();
          light_.add(value);
          onChanged();
        } else {
          lightBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Light light = 5;</code>
       *
       * <pre>
       *&#47; &#92;brief For light modify commands.
       * </pre>
       */
      public Builder addLight(
          int index, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.Light value) {
        if (lightBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLightIsMutable();
          light_.add(index, value);
          onChanged();
        } else {
          lightBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Light light = 5;</code>
       *
       * <pre>
       *&#47; &#92;brief For light modify commands.
       * </pre>
       */
      public Builder addLight(
          cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.Light.Builder builderForValue) {
        if (lightBuilder_ == null) {
          ensureLightIsMutable();
          light_.add(builderForValue.build());
          onChanged();
        } else {
          lightBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Light light = 5;</code>
       *
       * <pre>
       *&#47; &#92;brief For light modify commands.
       * </pre>
       */
      public Builder addLight(
          int index, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.Light.Builder builderForValue) {
        if (lightBuilder_ == null) {
          ensureLightIsMutable();
          light_.add(index, builderForValue.build());
          onChanged();
        } else {
          lightBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Light light = 5;</code>
       *
       * <pre>
       *&#47; &#92;brief For light modify commands.
       * </pre>
       */
      public Builder addAllLight(
          java.lang.Iterable<? extends cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.Light> values) {
        if (lightBuilder_ == null) {
          ensureLightIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, light_);
          onChanged();
        } else {
          lightBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Light light = 5;</code>
       *
       * <pre>
       *&#47; &#92;brief For light modify commands.
       * </pre>
       */
      public Builder clearLight() {
        if (lightBuilder_ == null) {
          light_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          lightBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Light light = 5;</code>
       *
       * <pre>
       *&#47; &#92;brief For light modify commands.
       * </pre>
       */
      public Builder removeLight(int index) {
        if (lightBuilder_ == null) {
          ensureLightIsMutable();
          light_.remove(index);
          onChanged();
        } else {
          lightBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .gazebo.msgs.Light light = 5;</code>
       *
       * <pre>
       *&#47; &#92;brief For light modify commands.
       * </pre>
       */
      public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.Light.Builder getLightBuilder(
          int index) {
        return getLightFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .gazebo.msgs.Light light = 5;</code>
       *
       * <pre>
       *&#47; &#92;brief For light modify commands.
       * </pre>
       */
      public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.LightOrBuilder getLightOrBuilder(
          int index) {
        if (lightBuilder_ == null) {
          return light_.get(index);  } else {
          return lightBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .gazebo.msgs.Light light = 5;</code>
       *
       * <pre>
       *&#47; &#92;brief For light modify commands.
       * </pre>
       */
      public java.util.List<? extends cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.LightOrBuilder>
           getLightOrBuilderList() {
        if (lightBuilder_ != null) {
          return lightBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(light_);
        }
      }
      /**
       * <code>repeated .gazebo.msgs.Light light = 5;</code>
       *
       * <pre>
       *&#47; &#92;brief For light modify commands.
       * </pre>
       */
      public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.Light.Builder addLightBuilder() {
        return getLightFieldBuilder().addBuilder(
            cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.Light.getDefaultInstance());
      }
      /**
       * <code>repeated .gazebo.msgs.Light light = 5;</code>
       *
       * <pre>
       *&#47; &#92;brief For light modify commands.
       * </pre>
       */
      public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.Light.Builder addLightBuilder(
          int index) {
        return getLightFieldBuilder().addBuilder(
            index, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.Light.getDefaultInstance());
      }
      /**
       * <code>repeated .gazebo.msgs.Light light = 5;</code>
       *
       * <pre>
       *&#47; &#92;brief For light modify commands.
       * </pre>
       */
      public java.util.List<cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.Light.Builder>
           getLightBuilderList() {
        return getLightFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.Light, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.Light.Builder, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.LightOrBuilder>
          getLightFieldBuilder() {
        if (lightBuilder_ == null) {
          lightBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.Light, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.Light.Builder, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.LightOrBuilder>(
                  light_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          light_ = null;
        }
        return lightBuilder_;
      }

      private java.lang.Object entityName_ = "";
      /**
       * <code>optional string entity_name = 6;</code>
       *
       * <pre>
       *&#47; &#92;brief Name of entity targeted by command
       * </pre>
       */
      public boolean hasEntityName() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string entity_name = 6;</code>
       *
       * <pre>
       *&#47; &#92;brief Name of entity targeted by command
       * </pre>
       */
      public java.lang.String getEntityName() {
        java.lang.Object ref = entityName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            entityName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string entity_name = 6;</code>
       *
       * <pre>
       *&#47; &#92;brief Name of entity targeted by command
       * </pre>
       */
      public com.google.protobuf.ByteString
          getEntityNameBytes() {
        java.lang.Object ref = entityName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          entityName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string entity_name = 6;</code>
       *
       * <pre>
       *&#47; &#92;brief Name of entity targeted by command
       * </pre>
       */
      public Builder setEntityName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        entityName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string entity_name = 6;</code>
       *
       * <pre>
       *&#47; &#92;brief Name of entity targeted by command
       * </pre>
       */
      public Builder clearEntityName() {
        bitField0_ = (bitField0_ & ~0x00000020);
        entityName_ = getDefaultInstance().getEntityName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string entity_name = 6;</code>
       *
       * <pre>
       *&#47; &#92;brief Name of entity targeted by command
       * </pre>
       */
      public Builder setEntityNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        entityName_ = value;
        onChanged();
        return this;
      }

      private cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWorldControl.WorldControl worldControl_ = cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWorldControl.WorldControl.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWorldControl.WorldControl, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWorldControl.WorldControl.Builder, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWorldControl.WorldControlOrBuilder> worldControlBuilder_;
      /**
       * <code>optional .gazebo.msgs.WorldControl world_control = 7;</code>
       *
       * <pre>
       *&#47; &#92;brief For World Control commands.
       * </pre>
       */
      public boolean hasWorldControl() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .gazebo.msgs.WorldControl world_control = 7;</code>
       *
       * <pre>
       *&#47; &#92;brief For World Control commands.
       * </pre>
       */
      public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWorldControl.WorldControl getWorldControl() {
        if (worldControlBuilder_ == null) {
          return worldControl_;
        } else {
          return worldControlBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gazebo.msgs.WorldControl world_control = 7;</code>
       *
       * <pre>
       *&#47; &#92;brief For World Control commands.
       * </pre>
       */
      public Builder setWorldControl(cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWorldControl.WorldControl value) {
        if (worldControlBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          worldControl_ = value;
          onChanged();
        } else {
          worldControlBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.WorldControl world_control = 7;</code>
       *
       * <pre>
       *&#47; &#92;brief For World Control commands.
       * </pre>
       */
      public Builder setWorldControl(
          cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWorldControl.WorldControl.Builder builderForValue) {
        if (worldControlBuilder_ == null) {
          worldControl_ = builderForValue.build();
          onChanged();
        } else {
          worldControlBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.WorldControl world_control = 7;</code>
       *
       * <pre>
       *&#47; &#92;brief For World Control commands.
       * </pre>
       */
      public Builder mergeWorldControl(cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWorldControl.WorldControl value) {
        if (worldControlBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              worldControl_ != cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWorldControl.WorldControl.getDefaultInstance()) {
            worldControl_ =
              cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWorldControl.WorldControl.newBuilder(worldControl_).mergeFrom(value).buildPartial();
          } else {
            worldControl_ = value;
          }
          onChanged();
        } else {
          worldControlBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.WorldControl world_control = 7;</code>
       *
       * <pre>
       *&#47; &#92;brief For World Control commands.
       * </pre>
       */
      public Builder clearWorldControl() {
        if (worldControlBuilder_ == null) {
          worldControl_ = cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWorldControl.WorldControl.getDefaultInstance();
          onChanged();
        } else {
          worldControlBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.WorldControl world_control = 7;</code>
       *
       * <pre>
       *&#47; &#92;brief For World Control commands.
       * </pre>
       */
      public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWorldControl.WorldControl.Builder getWorldControlBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getWorldControlFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gazebo.msgs.WorldControl world_control = 7;</code>
       *
       * <pre>
       *&#47; &#92;brief For World Control commands.
       * </pre>
       */
      public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWorldControl.WorldControlOrBuilder getWorldControlOrBuilder() {
        if (worldControlBuilder_ != null) {
          return worldControlBuilder_.getMessageOrBuilder();
        } else {
          return worldControl_;
        }
      }
      /**
       * <code>optional .gazebo.msgs.WorldControl world_control = 7;</code>
       *
       * <pre>
       *&#47; &#92;brief For World Control commands.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWorldControl.WorldControl, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWorldControl.WorldControl.Builder, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWorldControl.WorldControlOrBuilder>
          getWorldControlFieldBuilder() {
        if (worldControlBuilder_ == null) {
          worldControlBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWorldControl.WorldControl, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWorldControl.WorldControl.Builder, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWorldControl.WorldControlOrBuilder>(
                  getWorldControl(),
                  getParentForChildren(),
                  isClean());
          worldControl_ = null;
        }
        return worldControlBuilder_;
      }

      private cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench wrench_ = cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench.Builder, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.WrenchOrBuilder> wrenchBuilder_;
      /**
       * <code>optional .gazebo.msgs.Wrench wrench = 8;</code>
       *
       * <pre>
       *&#47; &#92;brief Wrench for apply wrench commands.
       * </pre>
       */
      public boolean hasWrench() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .gazebo.msgs.Wrench wrench = 8;</code>
       *
       * <pre>
       *&#47; &#92;brief Wrench for apply wrench commands.
       * </pre>
       */
      public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench getWrench() {
        if (wrenchBuilder_ == null) {
          return wrench_;
        } else {
          return wrenchBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gazebo.msgs.Wrench wrench = 8;</code>
       *
       * <pre>
       *&#47; &#92;brief Wrench for apply wrench commands.
       * </pre>
       */
      public Builder setWrench(cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench value) {
        if (wrenchBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          wrench_ = value;
          onChanged();
        } else {
          wrenchBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.Wrench wrench = 8;</code>
       *
       * <pre>
       *&#47; &#92;brief Wrench for apply wrench commands.
       * </pre>
       */
      public Builder setWrench(
          cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench.Builder builderForValue) {
        if (wrenchBuilder_ == null) {
          wrench_ = builderForValue.build();
          onChanged();
        } else {
          wrenchBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.Wrench wrench = 8;</code>
       *
       * <pre>
       *&#47; &#92;brief Wrench for apply wrench commands.
       * </pre>
       */
      public Builder mergeWrench(cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench value) {
        if (wrenchBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              wrench_ != cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench.getDefaultInstance()) {
            wrench_ =
              cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench.newBuilder(wrench_).mergeFrom(value).buildPartial();
          } else {
            wrench_ = value;
          }
          onChanged();
        } else {
          wrenchBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.Wrench wrench = 8;</code>
       *
       * <pre>
       *&#47; &#92;brief Wrench for apply wrench commands.
       * </pre>
       */
      public Builder clearWrench() {
        if (wrenchBuilder_ == null) {
          wrench_ = cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench.getDefaultInstance();
          onChanged();
        } else {
          wrenchBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.Wrench wrench = 8;</code>
       *
       * <pre>
       *&#47; &#92;brief Wrench for apply wrench commands.
       * </pre>
       */
      public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench.Builder getWrenchBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getWrenchFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gazebo.msgs.Wrench wrench = 8;</code>
       *
       * <pre>
       *&#47; &#92;brief Wrench for apply wrench commands.
       * </pre>
       */
      public cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.WrenchOrBuilder getWrenchOrBuilder() {
        if (wrenchBuilder_ != null) {
          return wrenchBuilder_.getMessageOrBuilder();
        } else {
          return wrench_;
        }
      }
      /**
       * <code>optional .gazebo.msgs.Wrench wrench = 8;</code>
       *
       * <pre>
       *&#47; &#92;brief Wrench for apply wrench commands.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench.Builder, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.WrenchOrBuilder>
          getWrenchFieldBuilder() {
        if (wrenchBuilder_ == null) {
          wrenchBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.Wrench.Builder, cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.WrenchOrBuilder>(
                  getWrench(),
                  getParentForChildren(),
                  isClean());
          wrench_ = null;
        }
        return wrenchBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:gazebo.msgs.UserCmd)
    }

    static {
      defaultInstance = new UserCmd(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gazebo.msgs.UserCmd)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gazebo_msgs_UserCmd_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gazebo_msgs_UserCmd_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016user_cmd.proto\022\013gazebo.msgs\032\013light.pro" +
      "to\032\013model.proto\032\023world_control.proto\032\014wr" +
      "ench.proto\"\305\002\n\007UserCmd\022\n\n\002id\030\001 \001(\r\022\023\n\013de" +
      "scription\030\002 \002(\t\022\'\n\004type\030\003 \002(\0162\031.gazebo.m" +
      "sgs.UserCmd.Type\022!\n\005model\030\004 \003(\0132\022.gazebo" +
      ".msgs.Model\022!\n\005light\030\005 \003(\0132\022.gazebo.msgs" +
      ".Light\022\023\n\013entity_name\030\006 \001(\t\0220\n\rworld_con" +
      "trol\030\007 \001(\0132\031.gazebo.msgs.WorldControl\022#\n" +
      "\006wrench\030\010 \001(\0132\023.gazebo.msgs.Wrench\">\n\004Ty" +
      "pe\022\n\n\006MOVING\020\001\022\021\n\rWORLD_CONTROL\020\002\022\n\n\006WRE",
      "NCH\020\003\022\013\n\007SCALING\020\004B/\n\037cn.autolabor.plugi" +
      "n.gazebo.msgsB\014ProtoUserCmd"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.getDescriptor(),
          cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.getDescriptor(),
          cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWorldControl.getDescriptor(),
          cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.getDescriptor(),
        }, assigner);
    internal_static_gazebo_msgs_UserCmd_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_gazebo_msgs_UserCmd_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_gazebo_msgs_UserCmd_descriptor,
        new java.lang.String[] { "Id", "Description", "Type", "Model", "Light", "EntityName", "WorldControl", "Wrench", });
    cn.autolabor.plugin.gazebo.gazebomsgs.ProtoLight.getDescriptor();
    cn.autolabor.plugin.gazebo.gazebomsgs.ProtoModel.getDescriptor();
    cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWorldControl.getDescriptor();
    cn.autolabor.plugin.gazebo.gazebomsgs.ProtoWrench.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
